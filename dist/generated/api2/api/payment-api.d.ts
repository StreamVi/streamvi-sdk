/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { PaymentCreateResponse } from '../models';
import type { PaymentCreateV1Request } from '../models';
import type { PaymentStatusResponse } from '../models';
/**
 * PaymentApi - axios parameter creator
 * @export
 */
export declare const PaymentApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create payment item for pay system
     * @param {PaymentCreateV1LanguageEnum} language Current language
     * @param {PaymentCreateV1Request} paymentCreateV1Request
     * @param {PaymentCreateV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentCreateV1: (language: PaymentCreateV1LanguageEnum, paymentCreateV1Request: PaymentCreateV1Request, v?: PaymentCreateV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {PaymentGetStatusV1LanguageEnum} language Current language
     * @param {number} payId Pay order id
     * @param {number} projectId Project id
     * @param {PaymentGetStatusV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentGetStatusV1: (language: PaymentGetStatusV1LanguageEnum, payId: number, projectId: number, v?: PaymentGetStatusV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {PaymentListV1LanguageEnum} language Current language
     * @param {PaymentListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {number} [pageSize] Number of results
     * @param {number} [page] Page number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentListV1: (language: PaymentListV1LanguageEnum, v?: PaymentListV1VEnum, pageSize?: number, page?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PaymentApi - functional programming interface
 * @export
 */
export declare const PaymentApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create payment item for pay system
     * @param {PaymentCreateV1LanguageEnum} language Current language
     * @param {PaymentCreateV1Request} paymentCreateV1Request
     * @param {PaymentCreateV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentCreateV1(language: PaymentCreateV1LanguageEnum, paymentCreateV1Request: PaymentCreateV1Request, v?: PaymentCreateV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentCreateResponse>>;
    /**
     *
     * @param {PaymentGetStatusV1LanguageEnum} language Current language
     * @param {number} payId Pay order id
     * @param {number} projectId Project id
     * @param {PaymentGetStatusV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentGetStatusV1(language: PaymentGetStatusV1LanguageEnum, payId: number, projectId: number, v?: PaymentGetStatusV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentStatusResponse>>;
    /**
     *
     * @param {PaymentListV1LanguageEnum} language Current language
     * @param {PaymentListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {number} [pageSize] Number of results
     * @param {number} [page] Page number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentListV1(language: PaymentListV1LanguageEnum, v?: PaymentListV1VEnum, pageSize?: number, page?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * PaymentApi - factory interface
 * @export
 */
export declare const PaymentApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create payment item for pay system
     * @param {PaymentApiPaymentCreateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentCreateV1(requestParameters: PaymentApiPaymentCreateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaymentCreateResponse>;
    /**
     *
     * @param {PaymentApiPaymentGetStatusV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentGetStatusV1(requestParameters: PaymentApiPaymentGetStatusV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaymentStatusResponse>;
    /**
     *
     * @param {PaymentApiPaymentListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentListV1(requestParameters: PaymentApiPaymentListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * PaymentApi - interface
 * @export
 * @interface PaymentApi
 */
export interface PaymentApiInterface {
    /**
     *
     * @summary Create payment item for pay system
     * @param {PaymentApiPaymentCreateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentApiInterface
     */
    paymentCreateV1(requestParameters: PaymentApiPaymentCreateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaymentCreateResponse>;
    /**
     *
     * @param {PaymentApiPaymentGetStatusV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentApiInterface
     */
    paymentGetStatusV1(requestParameters: PaymentApiPaymentGetStatusV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaymentStatusResponse>;
    /**
     *
     * @param {PaymentApiPaymentListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentApiInterface
     */
    paymentListV1(requestParameters: PaymentApiPaymentListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<void>;
}
/**
 * Request parameters for paymentCreateV1 operation in PaymentApi.
 * @export
 * @interface PaymentApiPaymentCreateV1Request
 */
export interface PaymentApiPaymentCreateV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof PaymentApiPaymentCreateV1
     */
    readonly language: PaymentCreateV1LanguageEnum;
    /**
     *
     * @type {PaymentCreateV1Request}
     * @memberof PaymentApiPaymentCreateV1
     */
    readonly paymentCreateV1Request: PaymentCreateV1Request;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof PaymentApiPaymentCreateV1
     */
    readonly v?: PaymentCreateV1VEnum;
}
/**
 * Request parameters for paymentGetStatusV1 operation in PaymentApi.
 * @export
 * @interface PaymentApiPaymentGetStatusV1Request
 */
export interface PaymentApiPaymentGetStatusV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof PaymentApiPaymentGetStatusV1
     */
    readonly language: PaymentGetStatusV1LanguageEnum;
    /**
     * Pay order id
     * @type {number}
     * @memberof PaymentApiPaymentGetStatusV1
     */
    readonly payId: number;
    /**
     * Project id
     * @type {number}
     * @memberof PaymentApiPaymentGetStatusV1
     */
    readonly projectId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof PaymentApiPaymentGetStatusV1
     */
    readonly v?: PaymentGetStatusV1VEnum;
}
/**
 * Request parameters for paymentListV1 operation in PaymentApi.
 * @export
 * @interface PaymentApiPaymentListV1Request
 */
export interface PaymentApiPaymentListV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof PaymentApiPaymentListV1
     */
    readonly language: PaymentListV1LanguageEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof PaymentApiPaymentListV1
     */
    readonly v?: PaymentListV1VEnum;
    /**
     * Number of results
     * @type {number}
     * @memberof PaymentApiPaymentListV1
     */
    readonly pageSize?: number;
    /**
     * Page number
     * @type {number}
     * @memberof PaymentApiPaymentListV1
     */
    readonly page?: number;
}
/**
 * PaymentApi - object-oriented interface
 * @export
 * @class PaymentApi
 * @extends {BaseAPI}
 */
export declare class PaymentApi extends BaseAPI implements PaymentApiInterface {
    /**
     *
     * @summary Create payment item for pay system
     * @param {PaymentApiPaymentCreateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentApi
     */
    paymentCreateV1(requestParameters: PaymentApiPaymentCreateV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaymentCreateResponse, any>>;
    /**
     *
     * @param {PaymentApiPaymentGetStatusV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentApi
     */
    paymentGetStatusV1(requestParameters: PaymentApiPaymentGetStatusV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaymentStatusResponse, any>>;
    /**
     *
     * @param {PaymentApiPaymentListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentApi
     */
    paymentListV1(requestParameters: PaymentApiPaymentListV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * @export
 */
export declare const PaymentCreateV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type PaymentCreateV1LanguageEnum = typeof PaymentCreateV1LanguageEnum[keyof typeof PaymentCreateV1LanguageEnum];
/**
 * @export
 */
export declare const PaymentCreateV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PaymentCreateV1VEnum = typeof PaymentCreateV1VEnum[keyof typeof PaymentCreateV1VEnum];
/**
 * @export
 */
export declare const PaymentGetStatusV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type PaymentGetStatusV1LanguageEnum = typeof PaymentGetStatusV1LanguageEnum[keyof typeof PaymentGetStatusV1LanguageEnum];
/**
 * @export
 */
export declare const PaymentGetStatusV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PaymentGetStatusV1VEnum = typeof PaymentGetStatusV1VEnum[keyof typeof PaymentGetStatusV1VEnum];
/**
 * @export
 */
export declare const PaymentListV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type PaymentListV1LanguageEnum = typeof PaymentListV1LanguageEnum[keyof typeof PaymentListV1LanguageEnum];
/**
 * @export
 */
export declare const PaymentListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PaymentListV1VEnum = typeof PaymentListV1VEnum[keyof typeof PaymentListV1VEnum];
//# sourceMappingURL=payment-api.d.ts.map