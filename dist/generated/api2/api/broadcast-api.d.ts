/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { MethodBroadcastRestreamsResponse } from '../models';
import type { MethodCurrentBroadcastResponse } from '../models';
/**
 * BroadcastApi - axios parameter creator
 * @export
 */
export declare const BroadcastApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get restreams
     * @param {MethodBroadcastRestreamsV1LanguageEnum} language Current language
     * @param {number} broadcastId broadcast id
     * @param {string} key Chat token
     * @param {MethodBroadcastRestreamsV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodBroadcastRestreamsV1: (language: MethodBroadcastRestreamsV1LanguageEnum, broadcastId: number, key: string, v?: MethodBroadcastRestreamsV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Connect channel, long polling
     * @param {MethodBroadcastTokenChannelV1LanguageEnum} language Current language
     * @param {string} key
     * @param {MethodBroadcastTokenChannelV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodBroadcastTokenChannelV1: (language: MethodBroadcastTokenChannelV1LanguageEnum, key: string, v?: MethodBroadcastTokenChannelV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BroadcastApi - functional programming interface
 * @export
 */
export declare const BroadcastApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get restreams
     * @param {MethodBroadcastRestreamsV1LanguageEnum} language Current language
     * @param {number} broadcastId broadcast id
     * @param {string} key Chat token
     * @param {MethodBroadcastRestreamsV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodBroadcastRestreamsV1(language: MethodBroadcastRestreamsV1LanguageEnum, broadcastId: number, key: string, v?: MethodBroadcastRestreamsV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MethodBroadcastRestreamsResponse>>;
    /**
     *
     * @summary Connect channel, long polling
     * @param {MethodBroadcastTokenChannelV1LanguageEnum} language Current language
     * @param {string} key
     * @param {MethodBroadcastTokenChannelV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodBroadcastTokenChannelV1(language: MethodBroadcastTokenChannelV1LanguageEnum, key: string, v?: MethodBroadcastTokenChannelV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MethodCurrentBroadcastResponse>>;
};
/**
 * BroadcastApi - factory interface
 * @export
 */
export declare const BroadcastApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get restreams
     * @param {BroadcastApiMethodBroadcastRestreamsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodBroadcastRestreamsV1(requestParameters: BroadcastApiMethodBroadcastRestreamsV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MethodBroadcastRestreamsResponse>;
    /**
     *
     * @summary Connect channel, long polling
     * @param {BroadcastApiMethodBroadcastTokenChannelV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodBroadcastTokenChannelV1(requestParameters: BroadcastApiMethodBroadcastTokenChannelV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MethodCurrentBroadcastResponse>;
};
/**
 * BroadcastApi - interface
 * @export
 * @interface BroadcastApi
 */
export interface BroadcastApiInterface {
    /**
     *
     * @summary Get restreams
     * @param {BroadcastApiMethodBroadcastRestreamsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BroadcastApiInterface
     */
    methodBroadcastRestreamsV1(requestParameters: BroadcastApiMethodBroadcastRestreamsV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MethodBroadcastRestreamsResponse>;
    /**
     *
     * @summary Connect channel, long polling
     * @param {BroadcastApiMethodBroadcastTokenChannelV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BroadcastApiInterface
     */
    methodBroadcastTokenChannelV1(requestParameters: BroadcastApiMethodBroadcastTokenChannelV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MethodCurrentBroadcastResponse>;
}
/**
 * Request parameters for methodBroadcastRestreamsV1 operation in BroadcastApi.
 * @export
 * @interface BroadcastApiMethodBroadcastRestreamsV1Request
 */
export interface BroadcastApiMethodBroadcastRestreamsV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof BroadcastApiMethodBroadcastRestreamsV1
     */
    readonly language: MethodBroadcastRestreamsV1LanguageEnum;
    /**
     * broadcast id
     * @type {number}
     * @memberof BroadcastApiMethodBroadcastRestreamsV1
     */
    readonly broadcastId: number;
    /**
     * Chat token
     * @type {string}
     * @memberof BroadcastApiMethodBroadcastRestreamsV1
     */
    readonly key: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof BroadcastApiMethodBroadcastRestreamsV1
     */
    readonly v?: MethodBroadcastRestreamsV1VEnum;
}
/**
 * Request parameters for methodBroadcastTokenChannelV1 operation in BroadcastApi.
 * @export
 * @interface BroadcastApiMethodBroadcastTokenChannelV1Request
 */
export interface BroadcastApiMethodBroadcastTokenChannelV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof BroadcastApiMethodBroadcastTokenChannelV1
     */
    readonly language: MethodBroadcastTokenChannelV1LanguageEnum;
    /**
     *
     * @type {string}
     * @memberof BroadcastApiMethodBroadcastTokenChannelV1
     */
    readonly key: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof BroadcastApiMethodBroadcastTokenChannelV1
     */
    readonly v?: MethodBroadcastTokenChannelV1VEnum;
}
/**
 * BroadcastApi - object-oriented interface
 * @export
 * @class BroadcastApi
 * @extends {BaseAPI}
 */
export declare class BroadcastApi extends BaseAPI implements BroadcastApiInterface {
    /**
     *
     * @summary Get restreams
     * @param {BroadcastApiMethodBroadcastRestreamsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BroadcastApi
     */
    methodBroadcastRestreamsV1(requestParameters: BroadcastApiMethodBroadcastRestreamsV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MethodBroadcastRestreamsResponse, any>>;
    /**
     *
     * @summary Connect channel, long polling
     * @param {BroadcastApiMethodBroadcastTokenChannelV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BroadcastApi
     */
    methodBroadcastTokenChannelV1(requestParameters: BroadcastApiMethodBroadcastTokenChannelV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MethodCurrentBroadcastResponse, any>>;
}
/**
 * @export
 */
export declare const MethodBroadcastRestreamsV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodBroadcastRestreamsV1LanguageEnum = typeof MethodBroadcastRestreamsV1LanguageEnum[keyof typeof MethodBroadcastRestreamsV1LanguageEnum];
/**
 * @export
 */
export declare const MethodBroadcastRestreamsV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodBroadcastRestreamsV1VEnum = typeof MethodBroadcastRestreamsV1VEnum[keyof typeof MethodBroadcastRestreamsV1VEnum];
/**
 * @export
 */
export declare const MethodBroadcastTokenChannelV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodBroadcastTokenChannelV1LanguageEnum = typeof MethodBroadcastTokenChannelV1LanguageEnum[keyof typeof MethodBroadcastTokenChannelV1LanguageEnum];
/**
 * @export
 */
export declare const MethodBroadcastTokenChannelV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodBroadcastTokenChannelV1VEnum = typeof MethodBroadcastTokenChannelV1VEnum[keyof typeof MethodBroadcastTokenChannelV1VEnum];
//# sourceMappingURL=broadcast-api.d.ts.map