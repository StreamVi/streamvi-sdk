/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { ListOfCategoryItemResponse } from '../models';
import type { SitePlatformsSupportedResponse } from '../models';
/**
 * PlatformsApi - axios parameter creator
 * @export
 */
export declare const PlatformsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get url for start oauth
     * @param {PlatformsAddAccountV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {PlatformsAddAccountV1PlatformEnum} platform Provider oauth
     * @param {PlatformsAddAccountV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsAddAccountV1: (language: PlatformsAddAccountV1LanguageEnum, projectId: number, platform: PlatformsAddAccountV1PlatformEnum, v?: PlatformsAddAccountV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsGetCategoryV1LanguageEnum} language Current language
     * @param {PlatformsGetCategoryV1TypeEnum} type Category search bar
     * @param {PlatformsGetCategoryV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [q] Category search bar
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsGetCategoryV1: (language: PlatformsGetCategoryV1LanguageEnum, type: PlatformsGetCategoryV1TypeEnum, v?: PlatformsGetCategoryV1VEnum, q?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsLogoutAccountV1LanguageEnum} language Current language
     * @param {string} id Category search bar
     * @param {PlatformsLogoutAccountV1PlatformEnum} platform Provider oauth
     * @param {PlatformsLogoutAccountV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsLogoutAccountV1: (language: PlatformsLogoutAccountV1LanguageEnum, id: string, platform: PlatformsLogoutAccountV1PlatformEnum, v?: PlatformsLogoutAccountV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Supported platforms
     * @param {PlatformsPlatformListV1LanguageEnum} language Current language
     * @param {PlatformsPlatformListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsPlatformListV1: (language: PlatformsPlatformListV1LanguageEnum, v?: PlatformsPlatformListV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PlatformsApi - functional programming interface
 * @export
 */
export declare const PlatformsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get url for start oauth
     * @param {PlatformsAddAccountV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {PlatformsAddAccountV1PlatformEnum} platform Provider oauth
     * @param {PlatformsAddAccountV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsAddAccountV1(language: PlatformsAddAccountV1LanguageEnum, projectId: number, platform: PlatformsAddAccountV1PlatformEnum, v?: PlatformsAddAccountV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsGetCategoryV1LanguageEnum} language Current language
     * @param {PlatformsGetCategoryV1TypeEnum} type Category search bar
     * @param {PlatformsGetCategoryV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [q] Category search bar
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsGetCategoryV1(language: PlatformsGetCategoryV1LanguageEnum, type: PlatformsGetCategoryV1TypeEnum, v?: PlatformsGetCategoryV1VEnum, q?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListOfCategoryItemResponse>>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsLogoutAccountV1LanguageEnum} language Current language
     * @param {string} id Category search bar
     * @param {PlatformsLogoutAccountV1PlatformEnum} platform Provider oauth
     * @param {PlatformsLogoutAccountV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsLogoutAccountV1(language: PlatformsLogoutAccountV1LanguageEnum, id: string, platform: PlatformsLogoutAccountV1PlatformEnum, v?: PlatformsLogoutAccountV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListOfCategoryItemResponse>>;
    /**
     *
     * @summary Supported platforms
     * @param {PlatformsPlatformListV1LanguageEnum} language Current language
     * @param {PlatformsPlatformListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsPlatformListV1(language: PlatformsPlatformListV1LanguageEnum, v?: PlatformsPlatformListV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SitePlatformsSupportedResponse>>;
};
/**
 * PlatformsApi - factory interface
 * @export
 */
export declare const PlatformsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get url for start oauth
     * @param {PlatformsApiPlatformsAddAccountV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsAddAccountV1(requestParameters: PlatformsApiPlatformsAddAccountV1Request, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsApiPlatformsGetCategoryV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsGetCategoryV1(requestParameters: PlatformsApiPlatformsGetCategoryV1Request, options?: RawAxiosRequestConfig): AxiosPromise<ListOfCategoryItemResponse>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsApiPlatformsLogoutAccountV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsLogoutAccountV1(requestParameters: PlatformsApiPlatformsLogoutAccountV1Request, options?: RawAxiosRequestConfig): AxiosPromise<ListOfCategoryItemResponse>;
    /**
     *
     * @summary Supported platforms
     * @param {PlatformsApiPlatformsPlatformListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsPlatformListV1(requestParameters: PlatformsApiPlatformsPlatformListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SitePlatformsSupportedResponse>;
};
/**
 * PlatformsApi - interface
 * @export
 * @interface PlatformsApi
 */
export interface PlatformsApiInterface {
    /**
     *
     * @summary Get url for start oauth
     * @param {PlatformsApiPlatformsAddAccountV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsAddAccountV1(requestParameters: PlatformsApiPlatformsAddAccountV1Request, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsApiPlatformsGetCategoryV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsGetCategoryV1(requestParameters: PlatformsApiPlatformsGetCategoryV1Request, options?: RawAxiosRequestConfig): AxiosPromise<ListOfCategoryItemResponse>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsApiPlatformsLogoutAccountV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsLogoutAccountV1(requestParameters: PlatformsApiPlatformsLogoutAccountV1Request, options?: RawAxiosRequestConfig): AxiosPromise<ListOfCategoryItemResponse>;
    /**
     *
     * @summary Supported platforms
     * @param {PlatformsApiPlatformsPlatformListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApiInterface
     */
    platformsPlatformListV1(requestParameters: PlatformsApiPlatformsPlatformListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SitePlatformsSupportedResponse>;
}
/**
 * Request parameters for platformsAddAccountV1 operation in PlatformsApi.
 * @export
 * @interface PlatformsApiPlatformsAddAccountV1Request
 */
export interface PlatformsApiPlatformsAddAccountV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof PlatformsApiPlatformsAddAccountV1
     */
    readonly language: PlatformsAddAccountV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof PlatformsApiPlatformsAddAccountV1
     */
    readonly projectId: number;
    /**
     * Provider oauth
     * @type {'vk' | 'vk-id' | 'ok' | 'youtube' | 'trovo' | 'twitch'}
     * @memberof PlatformsApiPlatformsAddAccountV1
     */
    readonly platform: PlatformsAddAccountV1PlatformEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof PlatformsApiPlatformsAddAccountV1
     */
    readonly v?: PlatformsAddAccountV1VEnum;
}
/**
 * Request parameters for platformsGetCategoryV1 operation in PlatformsApi.
 * @export
 * @interface PlatformsApiPlatformsGetCategoryV1Request
 */
export interface PlatformsApiPlatformsGetCategoryV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof PlatformsApiPlatformsGetCategoryV1
     */
    readonly language: PlatformsGetCategoryV1LanguageEnum;
    /**
     * Category search bar
     * @type {'vk' | 'youtube' | 'trovo' | 'twitch' | 'vkvideolive'}
     * @memberof PlatformsApiPlatformsGetCategoryV1
     */
    readonly type: PlatformsGetCategoryV1TypeEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof PlatformsApiPlatformsGetCategoryV1
     */
    readonly v?: PlatformsGetCategoryV1VEnum;
    /**
     * Category search bar
     * @type {string}
     * @memberof PlatformsApiPlatformsGetCategoryV1
     */
    readonly q?: string;
}
/**
 * Request parameters for platformsLogoutAccountV1 operation in PlatformsApi.
 * @export
 * @interface PlatformsApiPlatformsLogoutAccountV1Request
 */
export interface PlatformsApiPlatformsLogoutAccountV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof PlatformsApiPlatformsLogoutAccountV1
     */
    readonly language: PlatformsLogoutAccountV1LanguageEnum;
    /**
     * Category search bar
     * @type {string}
     * @memberof PlatformsApiPlatformsLogoutAccountV1
     */
    readonly id: string;
    /**
     * Provider oauth
     * @type {'vk' | 'vk-id' | 'ok' | 'youtube' | 'trovo' | 'twitch'}
     * @memberof PlatformsApiPlatformsLogoutAccountV1
     */
    readonly platform: PlatformsLogoutAccountV1PlatformEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof PlatformsApiPlatformsLogoutAccountV1
     */
    readonly v?: PlatformsLogoutAccountV1VEnum;
}
/**
 * Request parameters for platformsPlatformListV1 operation in PlatformsApi.
 * @export
 * @interface PlatformsApiPlatformsPlatformListV1Request
 */
export interface PlatformsApiPlatformsPlatformListV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof PlatformsApiPlatformsPlatformListV1
     */
    readonly language: PlatformsPlatformListV1LanguageEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof PlatformsApiPlatformsPlatformListV1
     */
    readonly v?: PlatformsPlatformListV1VEnum;
}
/**
 * PlatformsApi - object-oriented interface
 * @export
 * @class PlatformsApi
 * @extends {BaseAPI}
 */
export declare class PlatformsApi extends BaseAPI implements PlatformsApiInterface {
    /**
     *
     * @summary Get url for start oauth
     * @param {PlatformsApiPlatformsAddAccountV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApi
     */
    platformsAddAccountV1(requestParameters: PlatformsApiPlatformsAddAccountV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsApiPlatformsGetCategoryV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApi
     */
    platformsGetCategoryV1(requestParameters: PlatformsApiPlatformsGetCategoryV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").ListResponse, any>>;
    /**
     *
     * @summary Get category from the platform
     * @param {PlatformsApiPlatformsLogoutAccountV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApi
     */
    platformsLogoutAccountV1(requestParameters: PlatformsApiPlatformsLogoutAccountV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").ListResponse, any>>;
    /**
     *
     * @summary Supported platforms
     * @param {PlatformsApiPlatformsPlatformListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApi
     */
    platformsPlatformListV1(requestParameters: PlatformsApiPlatformsPlatformListV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SitePlatformsSupportedResponse, any>>;
}
/**
 * @export
 */
export declare const PlatformsAddAccountV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type PlatformsAddAccountV1LanguageEnum = typeof PlatformsAddAccountV1LanguageEnum[keyof typeof PlatformsAddAccountV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsAddAccountV1PlatformEnum: {
    readonly Vk: "vk";
    readonly VkId: "vk-id";
    readonly Ok: "ok";
    readonly Youtube: "youtube";
    readonly Trovo: "trovo";
    readonly Twitch: "twitch";
};
export type PlatformsAddAccountV1PlatformEnum = typeof PlatformsAddAccountV1PlatformEnum[keyof typeof PlatformsAddAccountV1PlatformEnum];
/**
 * @export
 */
export declare const PlatformsAddAccountV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsAddAccountV1VEnum = typeof PlatformsAddAccountV1VEnum[keyof typeof PlatformsAddAccountV1VEnum];
/**
 * @export
 */
export declare const PlatformsGetCategoryV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type PlatformsGetCategoryV1LanguageEnum = typeof PlatformsGetCategoryV1LanguageEnum[keyof typeof PlatformsGetCategoryV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsGetCategoryV1TypeEnum: {
    readonly Vk: "vk";
    readonly Youtube: "youtube";
    readonly Trovo: "trovo";
    readonly Twitch: "twitch";
    readonly Vkvideolive: "vkvideolive";
};
export type PlatformsGetCategoryV1TypeEnum = typeof PlatformsGetCategoryV1TypeEnum[keyof typeof PlatformsGetCategoryV1TypeEnum];
/**
 * @export
 */
export declare const PlatformsGetCategoryV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsGetCategoryV1VEnum = typeof PlatformsGetCategoryV1VEnum[keyof typeof PlatformsGetCategoryV1VEnum];
/**
 * @export
 */
export declare const PlatformsLogoutAccountV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type PlatformsLogoutAccountV1LanguageEnum = typeof PlatformsLogoutAccountV1LanguageEnum[keyof typeof PlatformsLogoutAccountV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsLogoutAccountV1PlatformEnum: {
    readonly Vk: "vk";
    readonly VkId: "vk-id";
    readonly Ok: "ok";
    readonly Youtube: "youtube";
    readonly Trovo: "trovo";
    readonly Twitch: "twitch";
};
export type PlatformsLogoutAccountV1PlatformEnum = typeof PlatformsLogoutAccountV1PlatformEnum[keyof typeof PlatformsLogoutAccountV1PlatformEnum];
/**
 * @export
 */
export declare const PlatformsLogoutAccountV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsLogoutAccountV1VEnum = typeof PlatformsLogoutAccountV1VEnum[keyof typeof PlatformsLogoutAccountV1VEnum];
/**
 * @export
 */
export declare const PlatformsPlatformListV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type PlatformsPlatformListV1LanguageEnum = typeof PlatformsPlatformListV1LanguageEnum[keyof typeof PlatformsPlatformListV1LanguageEnum];
/**
 * @export
 */
export declare const PlatformsPlatformListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type PlatformsPlatformListV1VEnum = typeof PlatformsPlatformListV1VEnum[keyof typeof PlatformsPlatformListV1VEnum];
//# sourceMappingURL=platforms-api.d.ts.map