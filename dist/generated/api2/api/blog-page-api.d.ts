/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { PaginatedResponseOfBlogPageSiteResponse } from '../models';
/**
 * BlogPageApi - axios parameter creator
 * @export
 */
export declare const BlogPageApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get blog page
     * @param {BlogPageGetV1LanguageEnum} language Current language
     * @param {string} url Url of page
     * @param {BlogPageGetV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageGetV1: (language: BlogPageGetV1LanguageEnum, url: string, v?: BlogPageGetV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageListV1LanguageEnum} language Current language
     * @param {BlogPageListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [s] String for search
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageListV1: (language: BlogPageListV1LanguageEnum, v?: BlogPageListV1VEnum, s?: string, limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BlogPageApi - functional programming interface
 * @export
 */
export declare const BlogPageApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get blog page
     * @param {BlogPageGetV1LanguageEnum} language Current language
     * @param {string} url Url of page
     * @param {BlogPageGetV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageGetV1(language: BlogPageGetV1LanguageEnum, url: string, v?: BlogPageGetV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResponseOfBlogPageSiteResponse>>;
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageListV1LanguageEnum} language Current language
     * @param {BlogPageListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [s] String for search
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageListV1(language: BlogPageListV1LanguageEnum, v?: BlogPageListV1VEnum, s?: string, limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResponseOfBlogPageSiteResponse>>;
};
/**
 * BlogPageApi - factory interface
 * @export
 */
export declare const BlogPageApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get blog page
     * @param {BlogPageApiBlogPageGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageGetV1(requestParameters: BlogPageApiBlogPageGetV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfBlogPageSiteResponse>;
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageApiBlogPageListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageListV1(requestParameters: BlogPageApiBlogPageListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfBlogPageSiteResponse>;
};
/**
 * BlogPageApi - interface
 * @export
 * @interface BlogPageApi
 */
export interface BlogPageApiInterface {
    /**
     *
     * @summary Get blog page
     * @param {BlogPageApiBlogPageGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlogPageApiInterface
     */
    blogPageGetV1(requestParameters: BlogPageApiBlogPageGetV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfBlogPageSiteResponse>;
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageApiBlogPageListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlogPageApiInterface
     */
    blogPageListV1(requestParameters: BlogPageApiBlogPageListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfBlogPageSiteResponse>;
}
/**
 * Request parameters for blogPageGetV1 operation in BlogPageApi.
 * @export
 * @interface BlogPageApiBlogPageGetV1Request
 */
export interface BlogPageApiBlogPageGetV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof BlogPageApiBlogPageGetV1
     */
    readonly language: BlogPageGetV1LanguageEnum;
    /**
     * Url of page
     * @type {string}
     * @memberof BlogPageApiBlogPageGetV1
     */
    readonly url: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof BlogPageApiBlogPageGetV1
     */
    readonly v?: BlogPageGetV1VEnum;
}
/**
 * Request parameters for blogPageListV1 operation in BlogPageApi.
 * @export
 * @interface BlogPageApiBlogPageListV1Request
 */
export interface BlogPageApiBlogPageListV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof BlogPageApiBlogPageListV1
     */
    readonly language: BlogPageListV1LanguageEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof BlogPageApiBlogPageListV1
     */
    readonly v?: BlogPageListV1VEnum;
    /**
     * String for search
     * @type {string}
     * @memberof BlogPageApiBlogPageListV1
     */
    readonly s?: string;
    /**
     * Number of results
     * @type {number}
     * @memberof BlogPageApiBlogPageListV1
     */
    readonly limit?: number;
    /**
     * Page offset number
     * @type {number}
     * @memberof BlogPageApiBlogPageListV1
     */
    readonly offset?: number;
}
/**
 * BlogPageApi - object-oriented interface
 * @export
 * @class BlogPageApi
 * @extends {BaseAPI}
 */
export declare class BlogPageApi extends BaseAPI implements BlogPageApiInterface {
    /**
     *
     * @summary Get blog page
     * @param {BlogPageApiBlogPageGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlogPageApi
     */
    blogPageGetV1(requestParameters: BlogPageApiBlogPageGetV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").PaginatedResponse, any>>;
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageApiBlogPageListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlogPageApi
     */
    blogPageListV1(requestParameters: BlogPageApiBlogPageListV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").PaginatedResponse, any>>;
}
/**
 * @export
 */
export declare const BlogPageGetV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type BlogPageGetV1LanguageEnum = typeof BlogPageGetV1LanguageEnum[keyof typeof BlogPageGetV1LanguageEnum];
/**
 * @export
 */
export declare const BlogPageGetV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type BlogPageGetV1VEnum = typeof BlogPageGetV1VEnum[keyof typeof BlogPageGetV1VEnum];
/**
 * @export
 */
export declare const BlogPageListV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type BlogPageListV1LanguageEnum = typeof BlogPageListV1LanguageEnum[keyof typeof BlogPageListV1LanguageEnum];
/**
 * @export
 */
export declare const BlogPageListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type BlogPageListV1VEnum = typeof BlogPageListV1VEnum[keyof typeof BlogPageListV1VEnum];
//# sourceMappingURL=blog-page-api.d.ts.map