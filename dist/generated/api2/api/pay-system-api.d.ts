/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { ListOfPaySystemListResponse } from '../models';
import type { SuccessResponse } from '../models';
/**
 * PaySystemApi - axios parameter creator
 * @export
 */
export declare const axiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {createChallenge1VEnum} v Version
     * @param {createChallenge1LanguageEnum} language Current language
     * @param {number} paymentId Payment id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createChallenge1: (v: createChallenge1VEnum, language: createChallenge1LanguageEnum, paymentId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {createUnitpay1VEnum} v Version
     * @param {createUnitpay1LanguageEnum} language Current language
     * @param {number} paymentId Payment id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUnitpay1: (v: createUnitpay1VEnum, language: createUnitpay1LanguageEnum, paymentId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Load available pay systems
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list1: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PaySystemApi - functional programming interface
 * @export
 */
export declare const fp: (configuration?: Configuration) => {
    /**
     *
     * @param {createChallenge1VEnum} v Version
     * @param {createChallenge1LanguageEnum} language Current language
     * @param {number} paymentId Payment id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createChallenge1(v: createChallenge1VEnum, language: createChallenge1LanguageEnum, paymentId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
    /**
     *
     * @param {createUnitpay1VEnum} v Version
     * @param {createUnitpay1LanguageEnum} language Current language
     * @param {number} paymentId Payment id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUnitpay1(v: createUnitpay1VEnum, language: createUnitpay1LanguageEnum, paymentId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
    /**
     *
     * @summary Load available pay systems
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list1(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListOfPaySystemListResponse>>;
};
/**
 * PaySystemApi - factory interface
 * @export
 */
export declare const factory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {createChallenge1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createChallenge1(requestParameters: createChallenge1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @param {createUnitpay1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUnitpay1(requestParameters: createUnitpay1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary Load available pay systems
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list1(options?: RawAxiosRequestConfig): AxiosPromise<ListOfPaySystemListResponse>;
};
/**
 * Request parameters for createChallenge1 operation in PaySystemApi.
 * @export
 * @interface createChallenge1Request
 */
export interface createChallenge1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof createChallenge1
     */
    readonly v?: createChallenge1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof createChallenge1
     */
    readonly language: createChallenge1LanguageEnum;
    /**
     * Payment id
     * @type {number}
     * @memberof createChallenge1
     */
    readonly paymentId: number;
}
/**
 * Request parameters for createUnitpay1 operation in PaySystemApi.
 * @export
 * @interface createUnitpay1Request
 */
export interface createUnitpay1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof createUnitpay1
     */
    readonly v?: createUnitpay1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof createUnitpay1
     */
    readonly language: createUnitpay1LanguageEnum;
    /**
     * Payment id
     * @type {number}
     * @memberof createUnitpay1
     */
    readonly paymentId: number;
}
/**
 * PaySystemApi - object-oriented interface
 * @export
 * @class PaySystemApi
 * @extends {BaseAPI}
 */
export declare class PaySystemApi extends BaseAPI {
    /**
     *
     * @param {createChallenge1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaySystemApi
     */
    createChallenge1(requestParameters: createChallenge1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
    /**
     *
     * @param {createUnitpay1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaySystemApi
     */
    createUnitpay1(requestParameters: createUnitpay1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
    /**
     *
     * @summary Load available pay systems
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaySystemApi
     */
    list1(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").ListResponse, any>>;
}
/**
  * @export
  * @enum {string}
  */
export declare enum createChallenge1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum createChallenge1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
/**
  * @export
  * @enum {string}
  */
export declare enum createUnitpay1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum createUnitpay1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
//# sourceMappingURL=pay-system-api.d.ts.map