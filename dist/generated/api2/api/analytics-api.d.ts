/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
/**
 * AnalyticsApi - axios parameter creator
 * @export
 */
export declare const axiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Bitrate for stream
     * @param {streamBitrate1VEnum} v Version
     * @param {streamBitrate1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamBitrate1: (v: streamBitrate1VEnum, language: streamBitrate1LanguageEnum, projectId: number, streamId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Events for stream
     * @param {streamEvents1VEnum} v Version
     * @param {streamEvents1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamEvents1: (v: streamEvents1VEnum, language: streamEvents1LanguageEnum, projectId: number, streamId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Viewers for stream
     * @param {streamViewers1VEnum} v Version
     * @param {streamViewers1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamViewers1: (v: streamViewers1VEnum, language: streamViewers1LanguageEnum, projectId: number, streamId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AnalyticsApi - functional programming interface
 * @export
 */
export declare const fp: (configuration?: Configuration) => {
    /**
     *
     * @summary Bitrate for stream
     * @param {streamBitrate1VEnum} v Version
     * @param {streamBitrate1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamBitrate1(v: streamBitrate1VEnum, language: streamBitrate1LanguageEnum, projectId: number, streamId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Events for stream
     * @param {streamEvents1VEnum} v Version
     * @param {streamEvents1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamEvents1(v: streamEvents1VEnum, language: streamEvents1LanguageEnum, projectId: number, streamId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Viewers for stream
     * @param {streamViewers1VEnum} v Version
     * @param {streamViewers1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamViewers1(v: streamViewers1VEnum, language: streamViewers1LanguageEnum, projectId: number, streamId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * AnalyticsApi - factory interface
 * @export
 */
export declare const factory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Bitrate for stream
     * @param {streamBitrate1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamBitrate1(requestParameters: streamBitrate1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Events for stream
     * @param {streamEvents1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamEvents1(requestParameters: streamEvents1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Viewers for stream
     * @param {streamViewers1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamViewers1(requestParameters: streamViewers1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
};
/**
 * Request parameters for streamBitrate1 operation in AnalyticsApi.
 * @export
 * @interface streamBitrate1Request
 */
export interface streamBitrate1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof streamBitrate1
     */
    readonly v?: streamBitrate1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof streamBitrate1
     */
    readonly language: streamBitrate1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof streamBitrate1
     */
    readonly projectId: number;
    /**
     * stream id
     * @type {number}
     * @memberof streamBitrate1
     */
    readonly streamId: number;
}
/**
 * Request parameters for streamEvents1 operation in AnalyticsApi.
 * @export
 * @interface streamEvents1Request
 */
export interface streamEvents1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof streamEvents1
     */
    readonly v?: streamEvents1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof streamEvents1
     */
    readonly language: streamEvents1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof streamEvents1
     */
    readonly projectId: number;
    /**
     * stream id
     * @type {number}
     * @memberof streamEvents1
     */
    readonly streamId: number;
}
/**
 * Request parameters for streamViewers1 operation in AnalyticsApi.
 * @export
 * @interface streamViewers1Request
 */
export interface streamViewers1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof streamViewers1
     */
    readonly v?: streamViewers1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof streamViewers1
     */
    readonly language: streamViewers1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof streamViewers1
     */
    readonly projectId: number;
    /**
     * stream id
     * @type {number}
     * @memberof streamViewers1
     */
    readonly streamId: number;
}
/**
 * AnalyticsApi - object-oriented interface
 * @export
 * @class AnalyticsApi
 * @extends {BaseAPI}
 */
export declare class AnalyticsApi extends BaseAPI {
    /**
     *
     * @summary Bitrate for stream
     * @param {streamBitrate1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApi
     */
    streamBitrate1(requestParameters: streamBitrate1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Events for stream
     * @param {streamEvents1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApi
     */
    streamEvents1(requestParameters: streamEvents1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Viewers for stream
     * @param {streamViewers1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApi
     */
    streamViewers1(requestParameters: streamViewers1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
  * @export
  * @enum {string}
  */
export declare enum streamBitrate1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum streamBitrate1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
/**
  * @export
  * @enum {string}
  */
export declare enum streamEvents1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum streamEvents1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
/**
  * @export
  * @enum {string}
  */
export declare enum streamViewers1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum streamViewers1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
//# sourceMappingURL=analytics-api.d.ts.map