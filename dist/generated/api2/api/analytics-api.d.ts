/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
/**
 * AnalyticsApi - axios parameter creator
 * @export
 */
export declare const AnalyticsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Bitrate for stream
     * @param {AnalyticsTsStreamBitrateV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {AnalyticsTsStreamBitrateV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamBitrateV1: (language: AnalyticsTsStreamBitrateV1LanguageEnum, projectId: number, streamId: number, v?: AnalyticsTsStreamBitrateV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Events for stream
     * @param {AnalyticsTsStreamEventsV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {AnalyticsTsStreamEventsV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamEventsV1: (language: AnalyticsTsStreamEventsV1LanguageEnum, projectId: number, streamId: number, v?: AnalyticsTsStreamEventsV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Viewers for stream
     * @param {AnalyticsTsStreamViewersV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {AnalyticsTsStreamViewersV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamViewersV1: (language: AnalyticsTsStreamViewersV1LanguageEnum, projectId: number, streamId: number, v?: AnalyticsTsStreamViewersV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AnalyticsApi - functional programming interface
 * @export
 */
export declare const AnalyticsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Bitrate for stream
     * @param {AnalyticsTsStreamBitrateV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {AnalyticsTsStreamBitrateV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamBitrateV1(language: AnalyticsTsStreamBitrateV1LanguageEnum, projectId: number, streamId: number, v?: AnalyticsTsStreamBitrateV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Events for stream
     * @param {AnalyticsTsStreamEventsV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {AnalyticsTsStreamEventsV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamEventsV1(language: AnalyticsTsStreamEventsV1LanguageEnum, projectId: number, streamId: number, v?: AnalyticsTsStreamEventsV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Viewers for stream
     * @param {AnalyticsTsStreamViewersV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} streamId stream id
     * @param {AnalyticsTsStreamViewersV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamViewersV1(language: AnalyticsTsStreamViewersV1LanguageEnum, projectId: number, streamId: number, v?: AnalyticsTsStreamViewersV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * AnalyticsApi - factory interface
 * @export
 */
export declare const AnalyticsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Bitrate for stream
     * @param {AnalyticsApiAnalyticsTsStreamBitrateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamBitrateV1(requestParameters: AnalyticsApiAnalyticsTsStreamBitrateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Events for stream
     * @param {AnalyticsApiAnalyticsTsStreamEventsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamEventsV1(requestParameters: AnalyticsApiAnalyticsTsStreamEventsV1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Viewers for stream
     * @param {AnalyticsApiAnalyticsTsStreamViewersV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    analyticsTsStreamViewersV1(requestParameters: AnalyticsApiAnalyticsTsStreamViewersV1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
};
/**
 * AnalyticsApi - interface
 * @export
 * @interface AnalyticsApi
 */
export interface AnalyticsApiInterface {
    /**
     *
     * @summary Bitrate for stream
     * @param {AnalyticsApiAnalyticsTsStreamBitrateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApiInterface
     */
    analyticsTsStreamBitrateV1(requestParameters: AnalyticsApiAnalyticsTsStreamBitrateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Events for stream
     * @param {AnalyticsApiAnalyticsTsStreamEventsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApiInterface
     */
    analyticsTsStreamEventsV1(requestParameters: AnalyticsApiAnalyticsTsStreamEventsV1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Viewers for stream
     * @param {AnalyticsApiAnalyticsTsStreamViewersV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApiInterface
     */
    analyticsTsStreamViewersV1(requestParameters: AnalyticsApiAnalyticsTsStreamViewersV1Request, options?: RawAxiosRequestConfig): AxiosPromise<object>;
}
/**
 * Request parameters for analyticsTsStreamBitrateV1 operation in AnalyticsApi.
 * @export
 * @interface AnalyticsApiAnalyticsTsStreamBitrateV1Request
 */
export interface AnalyticsApiAnalyticsTsStreamBitrateV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof AnalyticsApiAnalyticsTsStreamBitrateV1
     */
    readonly language: AnalyticsTsStreamBitrateV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof AnalyticsApiAnalyticsTsStreamBitrateV1
     */
    readonly projectId: number;
    /**
     * stream id
     * @type {number}
     * @memberof AnalyticsApiAnalyticsTsStreamBitrateV1
     */
    readonly streamId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof AnalyticsApiAnalyticsTsStreamBitrateV1
     */
    readonly v?: AnalyticsTsStreamBitrateV1VEnum;
}
/**
 * Request parameters for analyticsTsStreamEventsV1 operation in AnalyticsApi.
 * @export
 * @interface AnalyticsApiAnalyticsTsStreamEventsV1Request
 */
export interface AnalyticsApiAnalyticsTsStreamEventsV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof AnalyticsApiAnalyticsTsStreamEventsV1
     */
    readonly language: AnalyticsTsStreamEventsV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof AnalyticsApiAnalyticsTsStreamEventsV1
     */
    readonly projectId: number;
    /**
     * stream id
     * @type {number}
     * @memberof AnalyticsApiAnalyticsTsStreamEventsV1
     */
    readonly streamId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof AnalyticsApiAnalyticsTsStreamEventsV1
     */
    readonly v?: AnalyticsTsStreamEventsV1VEnum;
}
/**
 * Request parameters for analyticsTsStreamViewersV1 operation in AnalyticsApi.
 * @export
 * @interface AnalyticsApiAnalyticsTsStreamViewersV1Request
 */
export interface AnalyticsApiAnalyticsTsStreamViewersV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof AnalyticsApiAnalyticsTsStreamViewersV1
     */
    readonly language: AnalyticsTsStreamViewersV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof AnalyticsApiAnalyticsTsStreamViewersV1
     */
    readonly projectId: number;
    /**
     * stream id
     * @type {number}
     * @memberof AnalyticsApiAnalyticsTsStreamViewersV1
     */
    readonly streamId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof AnalyticsApiAnalyticsTsStreamViewersV1
     */
    readonly v?: AnalyticsTsStreamViewersV1VEnum;
}
/**
 * AnalyticsApi - object-oriented interface
 * @export
 * @class AnalyticsApi
 * @extends {BaseAPI}
 */
export declare class AnalyticsApi extends BaseAPI implements AnalyticsApiInterface {
    /**
     *
     * @summary Bitrate for stream
     * @param {AnalyticsApiAnalyticsTsStreamBitrateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApi
     */
    analyticsTsStreamBitrateV1(requestParameters: AnalyticsApiAnalyticsTsStreamBitrateV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Events for stream
     * @param {AnalyticsApiAnalyticsTsStreamEventsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApi
     */
    analyticsTsStreamEventsV1(requestParameters: AnalyticsApiAnalyticsTsStreamEventsV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Viewers for stream
     * @param {AnalyticsApiAnalyticsTsStreamViewersV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyticsApi
     */
    analyticsTsStreamViewersV1(requestParameters: AnalyticsApiAnalyticsTsStreamViewersV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * @export
 */
export declare const AnalyticsTsStreamBitrateV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type AnalyticsTsStreamBitrateV1LanguageEnum = typeof AnalyticsTsStreamBitrateV1LanguageEnum[keyof typeof AnalyticsTsStreamBitrateV1LanguageEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamBitrateV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type AnalyticsTsStreamBitrateV1VEnum = typeof AnalyticsTsStreamBitrateV1VEnum[keyof typeof AnalyticsTsStreamBitrateV1VEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamEventsV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type AnalyticsTsStreamEventsV1LanguageEnum = typeof AnalyticsTsStreamEventsV1LanguageEnum[keyof typeof AnalyticsTsStreamEventsV1LanguageEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamEventsV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type AnalyticsTsStreamEventsV1VEnum = typeof AnalyticsTsStreamEventsV1VEnum[keyof typeof AnalyticsTsStreamEventsV1VEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamViewersV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type AnalyticsTsStreamViewersV1LanguageEnum = typeof AnalyticsTsStreamViewersV1LanguageEnum[keyof typeof AnalyticsTsStreamViewersV1LanguageEnum];
/**
 * @export
 */
export declare const AnalyticsTsStreamViewersV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type AnalyticsTsStreamViewersV1VEnum = typeof AnalyticsTsStreamViewersV1VEnum[keyof typeof AnalyticsTsStreamViewersV1VEnum];
//# sourceMappingURL=analytics-api.d.ts.map