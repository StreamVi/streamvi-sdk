/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SiteTranscoderListResponse } from '../models';
import type { SuccessResponse } from '../models';
import type { TranscoderCreateDto } from '../models';
import type { TranscoderItemDto } from '../models';
import type { TranscoderUpdateDto } from '../models';
/**
 * TranscodersApi - axios parameter creator
 * @export
 */
export declare const TranscodersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Transcoder create
     * @param {TranscoderCreateDto} transcoderCreateDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersAddV1: (transcoderCreateDto: TranscoderCreateDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Transcoder delete
     * @param {TranscoderItemDto} transcoderItemDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersDeleteV1: (transcoderItemDto: TranscoderItemDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary List of transcoder
     * @param {TranscodersListV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {TranscodersListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersListV1: (language: TranscodersListV1LanguageEnum, projectId: number, v?: TranscodersListV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Transcoder stop
     * @param {TranscoderItemDto} transcoderItemDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersStopV1: (transcoderItemDto: TranscoderItemDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Transcoder update
     * @param {TranscoderUpdateDto} transcoderUpdateDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersUpdateV1: (transcoderUpdateDto: TranscoderUpdateDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TranscodersApi - functional programming interface
 * @export
 */
export declare const TranscodersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Transcoder create
     * @param {TranscoderCreateDto} transcoderCreateDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersAddV1(transcoderCreateDto: TranscoderCreateDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    /**
     *
     * @summary Transcoder delete
     * @param {TranscoderItemDto} transcoderItemDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersDeleteV1(transcoderItemDto: TranscoderItemDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
    /**
     *
     * @summary List of transcoder
     * @param {TranscodersListV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {TranscodersListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersListV1(language: TranscodersListV1LanguageEnum, projectId: number, v?: TranscodersListV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SiteTranscoderListResponse>>;
    /**
     *
     * @summary Transcoder stop
     * @param {TranscoderItemDto} transcoderItemDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersStopV1(transcoderItemDto: TranscoderItemDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
    /**
     *
     * @summary Transcoder update
     * @param {TranscoderUpdateDto} transcoderUpdateDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersUpdateV1(transcoderUpdateDto: TranscoderUpdateDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
};
/**
 * TranscodersApi - factory interface
 * @export
 */
export declare const TranscodersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Transcoder create
     * @param {TranscodersApiTranscodersAddV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersAddV1(requestParameters: TranscodersApiTranscodersAddV1Request, options?: RawAxiosRequestConfig): AxiosPromise<number>;
    /**
     *
     * @summary Transcoder delete
     * @param {TranscodersApiTranscodersDeleteV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersDeleteV1(requestParameters: TranscodersApiTranscodersDeleteV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary List of transcoder
     * @param {TranscodersApiTranscodersListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersListV1(requestParameters: TranscodersApiTranscodersListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SiteTranscoderListResponse>;
    /**
     *
     * @summary Transcoder stop
     * @param {TranscodersApiTranscodersStopV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersStopV1(requestParameters: TranscodersApiTranscodersStopV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary Transcoder update
     * @param {TranscodersApiTranscodersUpdateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transcodersUpdateV1(requestParameters: TranscodersApiTranscodersUpdateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
};
/**
 * TranscodersApi - interface
 * @export
 * @interface TranscodersApi
 */
export interface TranscodersApiInterface {
    /**
     *
     * @summary Transcoder create
     * @param {TranscodersApiTranscodersAddV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApiInterface
     */
    transcodersAddV1(requestParameters: TranscodersApiTranscodersAddV1Request, options?: RawAxiosRequestConfig): AxiosPromise<number>;
    /**
     *
     * @summary Transcoder delete
     * @param {TranscodersApiTranscodersDeleteV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApiInterface
     */
    transcodersDeleteV1(requestParameters: TranscodersApiTranscodersDeleteV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary List of transcoder
     * @param {TranscodersApiTranscodersListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApiInterface
     */
    transcodersListV1(requestParameters: TranscodersApiTranscodersListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SiteTranscoderListResponse>;
    /**
     *
     * @summary Transcoder stop
     * @param {TranscodersApiTranscodersStopV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApiInterface
     */
    transcodersStopV1(requestParameters: TranscodersApiTranscodersStopV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary Transcoder update
     * @param {TranscodersApiTranscodersUpdateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApiInterface
     */
    transcodersUpdateV1(requestParameters: TranscodersApiTranscodersUpdateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
}
/**
 * Request parameters for transcodersAddV1 operation in TranscodersApi.
 * @export
 * @interface TranscodersApiTranscodersAddV1Request
 */
export interface TranscodersApiTranscodersAddV1Request {
    /**
     *
     * @type {TranscoderCreateDto}
     * @memberof TranscodersApiTranscodersAddV1
     */
    readonly transcoderCreateDto: TranscoderCreateDto;
}
/**
 * Request parameters for transcodersDeleteV1 operation in TranscodersApi.
 * @export
 * @interface TranscodersApiTranscodersDeleteV1Request
 */
export interface TranscodersApiTranscodersDeleteV1Request {
    /**
     *
     * @type {TranscoderItemDto}
     * @memberof TranscodersApiTranscodersDeleteV1
     */
    readonly transcoderItemDto: TranscoderItemDto;
}
/**
 * Request parameters for transcodersListV1 operation in TranscodersApi.
 * @export
 * @interface TranscodersApiTranscodersListV1Request
 */
export interface TranscodersApiTranscodersListV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof TranscodersApiTranscodersListV1
     */
    readonly language: TranscodersListV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof TranscodersApiTranscodersListV1
     */
    readonly projectId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof TranscodersApiTranscodersListV1
     */
    readonly v?: TranscodersListV1VEnum;
}
/**
 * Request parameters for transcodersStopV1 operation in TranscodersApi.
 * @export
 * @interface TranscodersApiTranscodersStopV1Request
 */
export interface TranscodersApiTranscodersStopV1Request {
    /**
     *
     * @type {TranscoderItemDto}
     * @memberof TranscodersApiTranscodersStopV1
     */
    readonly transcoderItemDto: TranscoderItemDto;
}
/**
 * Request parameters for transcodersUpdateV1 operation in TranscodersApi.
 * @export
 * @interface TranscodersApiTranscodersUpdateV1Request
 */
export interface TranscodersApiTranscodersUpdateV1Request {
    /**
     *
     * @type {TranscoderUpdateDto}
     * @memberof TranscodersApiTranscodersUpdateV1
     */
    readonly transcoderUpdateDto: TranscoderUpdateDto;
}
/**
 * TranscodersApi - object-oriented interface
 * @export
 * @class TranscodersApi
 * @extends {BaseAPI}
 */
export declare class TranscodersApi extends BaseAPI implements TranscodersApiInterface {
    /**
     *
     * @summary Transcoder create
     * @param {TranscodersApiTranscodersAddV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApi
     */
    transcodersAddV1(requestParameters: TranscodersApiTranscodersAddV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    /**
     *
     * @summary Transcoder delete
     * @param {TranscodersApiTranscodersDeleteV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApi
     */
    transcodersDeleteV1(requestParameters: TranscodersApiTranscodersDeleteV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
    /**
     *
     * @summary List of transcoder
     * @param {TranscodersApiTranscodersListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApi
     */
    transcodersListV1(requestParameters: TranscodersApiTranscodersListV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SiteTranscoderListResponse, any>>;
    /**
     *
     * @summary Transcoder stop
     * @param {TranscodersApiTranscodersStopV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApi
     */
    transcodersStopV1(requestParameters: TranscodersApiTranscodersStopV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
    /**
     *
     * @summary Transcoder update
     * @param {TranscodersApiTranscodersUpdateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TranscodersApi
     */
    transcodersUpdateV1(requestParameters: TranscodersApiTranscodersUpdateV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
}
/**
 * @export
 */
export declare const TranscodersListV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type TranscodersListV1LanguageEnum = typeof TranscodersListV1LanguageEnum[keyof typeof TranscodersListV1LanguageEnum];
/**
 * @export
 */
export declare const TranscodersListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type TranscodersListV1VEnum = typeof TranscodersListV1VEnum[keyof typeof TranscodersListV1VEnum];
//# sourceMappingURL=transcoders-api.d.ts.map