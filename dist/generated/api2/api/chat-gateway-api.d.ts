/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { MessageResponseDto } from '../models';
import type { MethodChatHistoryResponse } from '../models';
import type { MethodChatSendMessageRequestDto } from '../models';
import type { SuccessResponse } from '../models';
/**
 * ChatGatewayApi - axios parameter creator
 * @export
 */
export declare const ChatGatewayApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Remove message
     * @param {MethodChatGatewayDeleteV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {string} eventId Event id
     * @param {MethodChatGatewayDeleteV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayDeleteV1: (language: MethodChatGatewayDeleteV1LanguageEnum, key: string, broadcastId: number, eventId: string, v?: MethodChatGatewayDeleteV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get one message
     * @param {MethodChatGatewayGetMessageV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {string} eventId Event id
     * @param {MethodChatGatewayGetMessageV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayGetMessageV1: (language: MethodChatGatewayGetMessageV1LanguageEnum, key: string, broadcastId: number, eventId: string, v?: MethodChatGatewayGetMessageV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary List history message
     * @param {MethodChatGatewayHistoryV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {MethodChatGatewayHistoryV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayHistoryV1: (language: MethodChatGatewayHistoryV1LanguageEnum, key: string, broadcastId: number, v?: MethodChatGatewayHistoryV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Send message
     * @param {MethodChatGatewaySendV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId
     * @param {MethodChatSendMessageRequestDto} methodChatSendMessageRequestDto
     * @param {MethodChatGatewaySendV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewaySendV1: (language: MethodChatGatewaySendV1LanguageEnum, key: string, broadcastId: number, methodChatSendMessageRequestDto: MethodChatSendMessageRequestDto, v?: MethodChatGatewaySendV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ChatGatewayApi - functional programming interface
 * @export
 */
export declare const ChatGatewayApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Remove message
     * @param {MethodChatGatewayDeleteV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {string} eventId Event id
     * @param {MethodChatGatewayDeleteV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayDeleteV1(language: MethodChatGatewayDeleteV1LanguageEnum, key: string, broadcastId: number, eventId: string, v?: MethodChatGatewayDeleteV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
    /**
     *
     * @summary Get one message
     * @param {MethodChatGatewayGetMessageV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {string} eventId Event id
     * @param {MethodChatGatewayGetMessageV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayGetMessageV1(language: MethodChatGatewayGetMessageV1LanguageEnum, key: string, broadcastId: number, eventId: string, v?: MethodChatGatewayGetMessageV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MessageResponseDto>>;
    /**
     *
     * @summary List history message
     * @param {MethodChatGatewayHistoryV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId broadcast id
     * @param {MethodChatGatewayHistoryV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayHistoryV1(language: MethodChatGatewayHistoryV1LanguageEnum, key: string, broadcastId: number, v?: MethodChatGatewayHistoryV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MethodChatHistoryResponse>>;
    /**
     *
     * @summary Send message
     * @param {MethodChatGatewaySendV1LanguageEnum} language Current language
     * @param {string} key Key
     * @param {number} broadcastId
     * @param {MethodChatSendMessageRequestDto} methodChatSendMessageRequestDto
     * @param {MethodChatGatewaySendV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewaySendV1(language: MethodChatGatewaySendV1LanguageEnum, key: string, broadcastId: number, methodChatSendMessageRequestDto: MethodChatSendMessageRequestDto, v?: MethodChatGatewaySendV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MessageResponseDto>>;
};
/**
 * ChatGatewayApi - factory interface
 * @export
 */
export declare const ChatGatewayApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Remove message
     * @param {ChatGatewayApiMethodChatGatewayDeleteV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayDeleteV1(requestParameters: ChatGatewayApiMethodChatGatewayDeleteV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary Get one message
     * @param {ChatGatewayApiMethodChatGatewayGetMessageV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayGetMessageV1(requestParameters: ChatGatewayApiMethodChatGatewayGetMessageV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MessageResponseDto>;
    /**
     *
     * @summary List history message
     * @param {ChatGatewayApiMethodChatGatewayHistoryV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewayHistoryV1(requestParameters: ChatGatewayApiMethodChatGatewayHistoryV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MethodChatHistoryResponse>;
    /**
     *
     * @summary Send message
     * @param {ChatGatewayApiMethodChatGatewaySendV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    methodChatGatewaySendV1(requestParameters: ChatGatewayApiMethodChatGatewaySendV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MessageResponseDto>;
};
/**
 * ChatGatewayApi - interface
 * @export
 * @interface ChatGatewayApi
 */
export interface ChatGatewayApiInterface {
    /**
     *
     * @summary Remove message
     * @param {ChatGatewayApiMethodChatGatewayDeleteV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewayDeleteV1(requestParameters: ChatGatewayApiMethodChatGatewayDeleteV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary Get one message
     * @param {ChatGatewayApiMethodChatGatewayGetMessageV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewayGetMessageV1(requestParameters: ChatGatewayApiMethodChatGatewayGetMessageV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MessageResponseDto>;
    /**
     *
     * @summary List history message
     * @param {ChatGatewayApiMethodChatGatewayHistoryV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewayHistoryV1(requestParameters: ChatGatewayApiMethodChatGatewayHistoryV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MethodChatHistoryResponse>;
    /**
     *
     * @summary Send message
     * @param {ChatGatewayApiMethodChatGatewaySendV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApiInterface
     */
    methodChatGatewaySendV1(requestParameters: ChatGatewayApiMethodChatGatewaySendV1Request, options?: RawAxiosRequestConfig): AxiosPromise<MessageResponseDto>;
}
/**
 * Request parameters for methodChatGatewayDeleteV1 operation in ChatGatewayApi.
 * @export
 * @interface ChatGatewayApiMethodChatGatewayDeleteV1Request
 */
export interface ChatGatewayApiMethodChatGatewayDeleteV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof ChatGatewayApiMethodChatGatewayDeleteV1
     */
    readonly language: MethodChatGatewayDeleteV1LanguageEnum;
    /**
     * Key
     * @type {string}
     * @memberof ChatGatewayApiMethodChatGatewayDeleteV1
     */
    readonly key: string;
    /**
     * broadcast id
     * @type {number}
     * @memberof ChatGatewayApiMethodChatGatewayDeleteV1
     */
    readonly broadcastId: number;
    /**
     * Event id
     * @type {string}
     * @memberof ChatGatewayApiMethodChatGatewayDeleteV1
     */
    readonly eventId: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof ChatGatewayApiMethodChatGatewayDeleteV1
     */
    readonly v?: MethodChatGatewayDeleteV1VEnum;
}
/**
 * Request parameters for methodChatGatewayGetMessageV1 operation in ChatGatewayApi.
 * @export
 * @interface ChatGatewayApiMethodChatGatewayGetMessageV1Request
 */
export interface ChatGatewayApiMethodChatGatewayGetMessageV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof ChatGatewayApiMethodChatGatewayGetMessageV1
     */
    readonly language: MethodChatGatewayGetMessageV1LanguageEnum;
    /**
     * Key
     * @type {string}
     * @memberof ChatGatewayApiMethodChatGatewayGetMessageV1
     */
    readonly key: string;
    /**
     * broadcast id
     * @type {number}
     * @memberof ChatGatewayApiMethodChatGatewayGetMessageV1
     */
    readonly broadcastId: number;
    /**
     * Event id
     * @type {string}
     * @memberof ChatGatewayApiMethodChatGatewayGetMessageV1
     */
    readonly eventId: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof ChatGatewayApiMethodChatGatewayGetMessageV1
     */
    readonly v?: MethodChatGatewayGetMessageV1VEnum;
}
/**
 * Request parameters for methodChatGatewayHistoryV1 operation in ChatGatewayApi.
 * @export
 * @interface ChatGatewayApiMethodChatGatewayHistoryV1Request
 */
export interface ChatGatewayApiMethodChatGatewayHistoryV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof ChatGatewayApiMethodChatGatewayHistoryV1
     */
    readonly language: MethodChatGatewayHistoryV1LanguageEnum;
    /**
     * Key
     * @type {string}
     * @memberof ChatGatewayApiMethodChatGatewayHistoryV1
     */
    readonly key: string;
    /**
     * broadcast id
     * @type {number}
     * @memberof ChatGatewayApiMethodChatGatewayHistoryV1
     */
    readonly broadcastId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof ChatGatewayApiMethodChatGatewayHistoryV1
     */
    readonly v?: MethodChatGatewayHistoryV1VEnum;
}
/**
 * Request parameters for methodChatGatewaySendV1 operation in ChatGatewayApi.
 * @export
 * @interface ChatGatewayApiMethodChatGatewaySendV1Request
 */
export interface ChatGatewayApiMethodChatGatewaySendV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof ChatGatewayApiMethodChatGatewaySendV1
     */
    readonly language: MethodChatGatewaySendV1LanguageEnum;
    /**
     * Key
     * @type {string}
     * @memberof ChatGatewayApiMethodChatGatewaySendV1
     */
    readonly key: string;
    /**
     *
     * @type {number}
     * @memberof ChatGatewayApiMethodChatGatewaySendV1
     */
    readonly broadcastId: number;
    /**
     *
     * @type {MethodChatSendMessageRequestDto}
     * @memberof ChatGatewayApiMethodChatGatewaySendV1
     */
    readonly methodChatSendMessageRequestDto: MethodChatSendMessageRequestDto;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof ChatGatewayApiMethodChatGatewaySendV1
     */
    readonly v?: MethodChatGatewaySendV1VEnum;
}
/**
 * ChatGatewayApi - object-oriented interface
 * @export
 * @class ChatGatewayApi
 * @extends {BaseAPI}
 */
export declare class ChatGatewayApi extends BaseAPI implements ChatGatewayApiInterface {
    /**
     *
     * @summary Remove message
     * @param {ChatGatewayApiMethodChatGatewayDeleteV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApi
     */
    methodChatGatewayDeleteV1(requestParameters: ChatGatewayApiMethodChatGatewayDeleteV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
    /**
     *
     * @summary Get one message
     * @param {ChatGatewayApiMethodChatGatewayGetMessageV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApi
     */
    methodChatGatewayGetMessageV1(requestParameters: ChatGatewayApiMethodChatGatewayGetMessageV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MessageResponseDto, any>>;
    /**
     *
     * @summary List history message
     * @param {ChatGatewayApiMethodChatGatewayHistoryV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApi
     */
    methodChatGatewayHistoryV1(requestParameters: ChatGatewayApiMethodChatGatewayHistoryV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MethodChatHistoryResponse, any>>;
    /**
     *
     * @summary Send message
     * @param {ChatGatewayApiMethodChatGatewaySendV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ChatGatewayApi
     */
    methodChatGatewaySendV1(requestParameters: ChatGatewayApiMethodChatGatewaySendV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MessageResponseDto, any>>;
}
/**
 * @export
 */
export declare const MethodChatGatewayDeleteV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewayDeleteV1LanguageEnum = typeof MethodChatGatewayDeleteV1LanguageEnum[keyof typeof MethodChatGatewayDeleteV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewayDeleteV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewayDeleteV1VEnum = typeof MethodChatGatewayDeleteV1VEnum[keyof typeof MethodChatGatewayDeleteV1VEnum];
/**
 * @export
 */
export declare const MethodChatGatewayGetMessageV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewayGetMessageV1LanguageEnum = typeof MethodChatGatewayGetMessageV1LanguageEnum[keyof typeof MethodChatGatewayGetMessageV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewayGetMessageV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewayGetMessageV1VEnum = typeof MethodChatGatewayGetMessageV1VEnum[keyof typeof MethodChatGatewayGetMessageV1VEnum];
/**
 * @export
 */
export declare const MethodChatGatewayHistoryV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewayHistoryV1LanguageEnum = typeof MethodChatGatewayHistoryV1LanguageEnum[keyof typeof MethodChatGatewayHistoryV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewayHistoryV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewayHistoryV1VEnum = typeof MethodChatGatewayHistoryV1VEnum[keyof typeof MethodChatGatewayHistoryV1VEnum];
/**
 * @export
 */
export declare const MethodChatGatewaySendV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type MethodChatGatewaySendV1LanguageEnum = typeof MethodChatGatewaySendV1LanguageEnum[keyof typeof MethodChatGatewaySendV1LanguageEnum];
/**
 * @export
 */
export declare const MethodChatGatewaySendV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type MethodChatGatewaySendV1VEnum = typeof MethodChatGatewaySendV1VEnum[keyof typeof MethodChatGatewaySendV1VEnum];
//# sourceMappingURL=chat-gateway-api.d.ts.map