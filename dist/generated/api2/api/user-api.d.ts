/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SuccessResponse } from '../models';
import type { UserProfileResponse } from '../models';
/**
 * UserApi - axios parameter creator
 * @export
 */
export declare const axiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get user profile
     * @param {getProfile1VEnum} v Version
     * @param {getProfile1LanguageEnum} language Current language
     * @param {number | null} [projectId] Project id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProfile1: (v: getProfile1VEnum, language: getProfile1LanguageEnum, projectId?: number | null, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Test code only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCode1: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Test code exception only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCodeException1: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Update profile
     * @param {updateProfile1VEnum} v Version
     * @param {updateProfile1LanguageEnum} language Current language
     * @param {string} firstName First name
     * @param {string} lastName Last name
     * @param {File} [avatar] File for avatar upload max size 2MB, format: jpeg, jpg, png
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProfile1: (v: updateProfile1VEnum, language: updateProfile1LanguageEnum, firstName: string, lastName: string, avatar?: File, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UserApi - functional programming interface
 * @export
 */
export declare const fp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get user profile
     * @param {getProfile1VEnum} v Version
     * @param {getProfile1LanguageEnum} language Current language
     * @param {number | null} [projectId] Project id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProfile1(v: getProfile1VEnum, language: getProfile1LanguageEnum, projectId?: number | null, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserProfileResponse>>;
    /**
     *
     * @summary Test code only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCode1(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Test code exception only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCodeException1(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Update profile
     * @param {updateProfile1VEnum} v Version
     * @param {updateProfile1LanguageEnum} language Current language
     * @param {string} firstName First name
     * @param {string} lastName Last name
     * @param {File} [avatar] File for avatar upload max size 2MB, format: jpeg, jpg, png
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProfile1(v: updateProfile1VEnum, language: updateProfile1LanguageEnum, firstName: string, lastName: string, avatar?: File, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
};
/**
 * UserApi - factory interface
 * @export
 */
export declare const factory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get user profile
     * @param {getProfile1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProfile1(requestParameters: getProfile1Request, options?: RawAxiosRequestConfig): AxiosPromise<UserProfileResponse>;
    /**
     *
     * @summary Test code only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCode1(options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @summary Test code exception only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    testCodeException1(options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @summary Update profile
     * @param {updateProfile1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProfile1(requestParameters: updateProfile1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
};
/**
 * Request parameters for getProfile1 operation in UserApi.
 * @export
 * @interface getProfile1Request
 */
export interface getProfile1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof getProfile1
     */
    readonly v?: getProfile1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof getProfile1
     */
    readonly language: getProfile1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof getProfile1
     */
    readonly projectId?: number | null;
}
/**
 * Request parameters for updateProfile1 operation in UserApi.
 * @export
 * @interface updateProfile1Request
 */
export interface updateProfile1Request {
    /**
     * Version
     * @type {string}
     * @memberof updateProfile1
     */
    readonly v?: updateProfile1VEnum;
    /**
     * Current language
     * @type {string}
     * @memberof updateProfile1
     */
    readonly language: updateProfile1LanguageEnum;
    /**
     * First name
     * @type {string}
     * @memberof updateProfile1
     */
    readonly firstName: string;
    /**
     * Last name
     * @type {string}
     * @memberof updateProfile1
     */
    readonly lastName: string;
    /**
     * File for avatar upload max size 2MB, format: jpeg, jpg, png
     * @type {File}
     * @memberof updateProfile1
     */
    readonly avatar?: File;
}
/**
 * UserApi - object-oriented interface
 * @export
 * @class UserApi
 * @extends {BaseAPI}
 */
export declare class UserApi extends BaseAPI {
    /**
     *
     * @summary Get user profile
     * @param {getProfile1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    getProfile1(requestParameters: getProfile1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserProfileResponse, any>>;
    /**
     *
     * @summary Test code only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    testCode1(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Test code exception only
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    testCodeException1(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Update profile
     * @param {updateProfile1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    updateProfile1(requestParameters: updateProfile1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
}
/**
  * @export
  * @enum {string}
  */
export declare enum getProfile1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum getProfile1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
/**
  * @export
  * @enum {string}
  */
export declare enum updateProfile1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum updateProfile1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
//# sourceMappingURL=user-api.d.ts.map