/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CheckPullKeyResponse } from '../models';
import type { CreatePullKeyRequest } from '../models';
import type { CreatePullKeyResponse } from '../models';
import type { PullKeyListResponse } from '../models';
import type { SuccessResponse } from '../models';
import type { UpdatePullKeyRequest } from '../models';
/**
 * StreamPullKeysApi - axios parameter creator
 * @export
 */
export declare const StreamPullKeysApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Check key
     * @param {StreamPullKeysSiteCheckV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {string} key Key
     * @param {StreamPullKeysSiteCheckV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteCheckV1: (language: StreamPullKeysSiteCheckV1LanguageEnum, projectId: number, key: string, v?: StreamPullKeysSiteCheckV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Create key
     * @param {CreatePullKeyRequest} createPullKeyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteCreateV1: (createPullKeyRequest: CreatePullKeyRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary List keys
     * @param {StreamPullKeysSiteGetV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {StreamPullKeysSiteGetV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteGetV1: (language: StreamPullKeysSiteGetV1LanguageEnum, projectId: number, v?: StreamPullKeysSiteGetV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete key
     * @param {StreamPullKeysSiteRemoveV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {string} key Key
     * @param {StreamPullKeysSiteRemoveV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteRemoveV1: (language: StreamPullKeysSiteRemoveV1LanguageEnum, projectId: number, key: string, v?: StreamPullKeysSiteRemoveV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Update key
     * @param {UpdatePullKeyRequest} updatePullKeyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteUpdateV1: (updatePullKeyRequest: UpdatePullKeyRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StreamPullKeysApi - functional programming interface
 * @export
 */
export declare const StreamPullKeysApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Check key
     * @param {StreamPullKeysSiteCheckV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {string} key Key
     * @param {StreamPullKeysSiteCheckV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteCheckV1(language: StreamPullKeysSiteCheckV1LanguageEnum, projectId: number, key: string, v?: StreamPullKeysSiteCheckV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CheckPullKeyResponse>>;
    /**
     *
     * @summary Create key
     * @param {CreatePullKeyRequest} createPullKeyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteCreateV1(createPullKeyRequest: CreatePullKeyRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreatePullKeyResponse>>;
    /**
     *
     * @summary List keys
     * @param {StreamPullKeysSiteGetV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {StreamPullKeysSiteGetV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteGetV1(language: StreamPullKeysSiteGetV1LanguageEnum, projectId: number, v?: StreamPullKeysSiteGetV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PullKeyListResponse>>;
    /**
     *
     * @summary Delete key
     * @param {StreamPullKeysSiteRemoveV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {string} key Key
     * @param {StreamPullKeysSiteRemoveV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteRemoveV1(language: StreamPullKeysSiteRemoveV1LanguageEnum, projectId: number, key: string, v?: StreamPullKeysSiteRemoveV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
    /**
     *
     * @summary Update key
     * @param {UpdatePullKeyRequest} updatePullKeyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteUpdateV1(updatePullKeyRequest: UpdatePullKeyRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuccessResponse>>;
};
/**
 * StreamPullKeysApi - factory interface
 * @export
 */
export declare const StreamPullKeysApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Check key
     * @param {StreamPullKeysApiStreamPullKeysSiteCheckV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteCheckV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteCheckV1Request, options?: RawAxiosRequestConfig): AxiosPromise<CheckPullKeyResponse>;
    /**
     *
     * @summary Create key
     * @param {StreamPullKeysApiStreamPullKeysSiteCreateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteCreateV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteCreateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<CreatePullKeyResponse>;
    /**
     *
     * @summary List keys
     * @param {StreamPullKeysApiStreamPullKeysSiteGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteGetV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteGetV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PullKeyListResponse>;
    /**
     *
     * @summary Delete key
     * @param {StreamPullKeysApiStreamPullKeysSiteRemoveV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteRemoveV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteRemoveV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary Update key
     * @param {StreamPullKeysApiStreamPullKeysSiteUpdateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    streamPullKeysSiteUpdateV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteUpdateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
};
/**
 * StreamPullKeysApi - interface
 * @export
 * @interface StreamPullKeysApi
 */
export interface StreamPullKeysApiInterface {
    /**
     *
     * @summary Check key
     * @param {StreamPullKeysApiStreamPullKeysSiteCheckV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteCheckV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteCheckV1Request, options?: RawAxiosRequestConfig): AxiosPromise<CheckPullKeyResponse>;
    /**
     *
     * @summary Create key
     * @param {StreamPullKeysApiStreamPullKeysSiteCreateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteCreateV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteCreateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<CreatePullKeyResponse>;
    /**
     *
     * @summary List keys
     * @param {StreamPullKeysApiStreamPullKeysSiteGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteGetV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteGetV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PullKeyListResponse>;
    /**
     *
     * @summary Delete key
     * @param {StreamPullKeysApiStreamPullKeysSiteRemoveV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteRemoveV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteRemoveV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
    /**
     *
     * @summary Update key
     * @param {StreamPullKeysApiStreamPullKeysSiteUpdateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApiInterface
     */
    streamPullKeysSiteUpdateV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteUpdateV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SuccessResponse>;
}
/**
 * Request parameters for streamPullKeysSiteCheckV1 operation in StreamPullKeysApi.
 * @export
 * @interface StreamPullKeysApiStreamPullKeysSiteCheckV1Request
 */
export interface StreamPullKeysApiStreamPullKeysSiteCheckV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof StreamPullKeysApiStreamPullKeysSiteCheckV1
     */
    readonly language: StreamPullKeysSiteCheckV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof StreamPullKeysApiStreamPullKeysSiteCheckV1
     */
    readonly projectId: number;
    /**
     * Key
     * @type {string}
     * @memberof StreamPullKeysApiStreamPullKeysSiteCheckV1
     */
    readonly key: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof StreamPullKeysApiStreamPullKeysSiteCheckV1
     */
    readonly v?: StreamPullKeysSiteCheckV1VEnum;
}
/**
 * Request parameters for streamPullKeysSiteCreateV1 operation in StreamPullKeysApi.
 * @export
 * @interface StreamPullKeysApiStreamPullKeysSiteCreateV1Request
 */
export interface StreamPullKeysApiStreamPullKeysSiteCreateV1Request {
    /**
     *
     * @type {CreatePullKeyRequest}
     * @memberof StreamPullKeysApiStreamPullKeysSiteCreateV1
     */
    readonly createPullKeyRequest: CreatePullKeyRequest;
}
/**
 * Request parameters for streamPullKeysSiteGetV1 operation in StreamPullKeysApi.
 * @export
 * @interface StreamPullKeysApiStreamPullKeysSiteGetV1Request
 */
export interface StreamPullKeysApiStreamPullKeysSiteGetV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof StreamPullKeysApiStreamPullKeysSiteGetV1
     */
    readonly language: StreamPullKeysSiteGetV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof StreamPullKeysApiStreamPullKeysSiteGetV1
     */
    readonly projectId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof StreamPullKeysApiStreamPullKeysSiteGetV1
     */
    readonly v?: StreamPullKeysSiteGetV1VEnum;
}
/**
 * Request parameters for streamPullKeysSiteRemoveV1 operation in StreamPullKeysApi.
 * @export
 * @interface StreamPullKeysApiStreamPullKeysSiteRemoveV1Request
 */
export interface StreamPullKeysApiStreamPullKeysSiteRemoveV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof StreamPullKeysApiStreamPullKeysSiteRemoveV1
     */
    readonly language: StreamPullKeysSiteRemoveV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof StreamPullKeysApiStreamPullKeysSiteRemoveV1
     */
    readonly projectId: number;
    /**
     * Key
     * @type {string}
     * @memberof StreamPullKeysApiStreamPullKeysSiteRemoveV1
     */
    readonly key: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof StreamPullKeysApiStreamPullKeysSiteRemoveV1
     */
    readonly v?: StreamPullKeysSiteRemoveV1VEnum;
}
/**
 * Request parameters for streamPullKeysSiteUpdateV1 operation in StreamPullKeysApi.
 * @export
 * @interface StreamPullKeysApiStreamPullKeysSiteUpdateV1Request
 */
export interface StreamPullKeysApiStreamPullKeysSiteUpdateV1Request {
    /**
     *
     * @type {UpdatePullKeyRequest}
     * @memberof StreamPullKeysApiStreamPullKeysSiteUpdateV1
     */
    readonly updatePullKeyRequest: UpdatePullKeyRequest;
}
/**
 * StreamPullKeysApi - object-oriented interface
 * @export
 * @class StreamPullKeysApi
 * @extends {BaseAPI}
 */
export declare class StreamPullKeysApi extends BaseAPI implements StreamPullKeysApiInterface {
    /**
     *
     * @summary Check key
     * @param {StreamPullKeysApiStreamPullKeysSiteCheckV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApi
     */
    streamPullKeysSiteCheckV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteCheckV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CheckPullKeyResponse, any>>;
    /**
     *
     * @summary Create key
     * @param {StreamPullKeysApiStreamPullKeysSiteCreateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApi
     */
    streamPullKeysSiteCreateV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteCreateV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreatePullKeyResponse, any>>;
    /**
     *
     * @summary List keys
     * @param {StreamPullKeysApiStreamPullKeysSiteGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApi
     */
    streamPullKeysSiteGetV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteGetV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PullKeyListResponse, any>>;
    /**
     *
     * @summary Delete key
     * @param {StreamPullKeysApiStreamPullKeysSiteRemoveV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApi
     */
    streamPullKeysSiteRemoveV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteRemoveV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
    /**
     *
     * @summary Update key
     * @param {StreamPullKeysApiStreamPullKeysSiteUpdateV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StreamPullKeysApi
     */
    streamPullKeysSiteUpdateV1(requestParameters: StreamPullKeysApiStreamPullKeysSiteUpdateV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SuccessResponse, any>>;
}
/**
 * @export
 */
export declare const StreamPullKeysSiteCheckV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type StreamPullKeysSiteCheckV1LanguageEnum = typeof StreamPullKeysSiteCheckV1LanguageEnum[keyof typeof StreamPullKeysSiteCheckV1LanguageEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteCheckV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type StreamPullKeysSiteCheckV1VEnum = typeof StreamPullKeysSiteCheckV1VEnum[keyof typeof StreamPullKeysSiteCheckV1VEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteGetV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type StreamPullKeysSiteGetV1LanguageEnum = typeof StreamPullKeysSiteGetV1LanguageEnum[keyof typeof StreamPullKeysSiteGetV1LanguageEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteGetV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type StreamPullKeysSiteGetV1VEnum = typeof StreamPullKeysSiteGetV1VEnum[keyof typeof StreamPullKeysSiteGetV1VEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteRemoveV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type StreamPullKeysSiteRemoveV1LanguageEnum = typeof StreamPullKeysSiteRemoveV1LanguageEnum[keyof typeof StreamPullKeysSiteRemoveV1LanguageEnum];
/**
 * @export
 */
export declare const StreamPullKeysSiteRemoveV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type StreamPullKeysSiteRemoveV1VEnum = typeof StreamPullKeysSiteRemoveV1VEnum[keyof typeof StreamPullKeysSiteRemoveV1VEnum];
//# sourceMappingURL=stream-pull-keys-api.d.ts.map