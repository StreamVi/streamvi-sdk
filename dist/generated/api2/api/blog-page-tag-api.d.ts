/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { PaginatedResponseOfSiteBlogPageTagResponse } from '../models';
/**
 * BlogPageTagApi - axios parameter creator
 * @export
 */
export declare const BlogPageTagApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageTagListV1LanguageEnum} language Current language
     * @param {BlogPageTagListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [s] String for search
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageTagListV1: (language: BlogPageTagListV1LanguageEnum, v?: BlogPageTagListV1VEnum, s?: string, limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BlogPageTagApi - functional programming interface
 * @export
 */
export declare const BlogPageTagApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageTagListV1LanguageEnum} language Current language
     * @param {BlogPageTagListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [s] String for search
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageTagListV1(language: BlogPageTagListV1LanguageEnum, v?: BlogPageTagListV1VEnum, s?: string, limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResponseOfSiteBlogPageTagResponse>>;
};
/**
 * BlogPageTagApi - factory interface
 * @export
 */
export declare const BlogPageTagApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageTagApiBlogPageTagListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    blogPageTagListV1(requestParameters: BlogPageTagApiBlogPageTagListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfSiteBlogPageTagResponse>;
};
/**
 * BlogPageTagApi - interface
 * @export
 * @interface BlogPageTagApi
 */
export interface BlogPageTagApiInterface {
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageTagApiBlogPageTagListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlogPageTagApiInterface
     */
    blogPageTagListV1(requestParameters: BlogPageTagApiBlogPageTagListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfSiteBlogPageTagResponse>;
}
/**
 * Request parameters for blogPageTagListV1 operation in BlogPageTagApi.
 * @export
 * @interface BlogPageTagApiBlogPageTagListV1Request
 */
export interface BlogPageTagApiBlogPageTagListV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof BlogPageTagApiBlogPageTagListV1
     */
    readonly language: BlogPageTagListV1LanguageEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof BlogPageTagApiBlogPageTagListV1
     */
    readonly v?: BlogPageTagListV1VEnum;
    /**
     * String for search
     * @type {string}
     * @memberof BlogPageTagApiBlogPageTagListV1
     */
    readonly s?: string;
    /**
     * Number of results
     * @type {number}
     * @memberof BlogPageTagApiBlogPageTagListV1
     */
    readonly limit?: number;
    /**
     * Page offset number
     * @type {number}
     * @memberof BlogPageTagApiBlogPageTagListV1
     */
    readonly offset?: number;
}
/**
 * BlogPageTagApi - object-oriented interface
 * @export
 * @class BlogPageTagApi
 * @extends {BaseAPI}
 */
export declare class BlogPageTagApi extends BaseAPI implements BlogPageTagApiInterface {
    /**
     *
     * @summary Get list of blog pages
     * @param {BlogPageTagApiBlogPageTagListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlogPageTagApi
     */
    blogPageTagListV1(requestParameters: BlogPageTagApiBlogPageTagListV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").PaginatedResponse, any>>;
}
/**
 * @export
 */
export declare const BlogPageTagListV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type BlogPageTagListV1LanguageEnum = typeof BlogPageTagListV1LanguageEnum[keyof typeof BlogPageTagListV1LanguageEnum];
/**
 * @export
 */
export declare const BlogPageTagListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type BlogPageTagListV1VEnum = typeof BlogPageTagListV1VEnum[keyof typeof BlogPageTagListV1VEnum];
//# sourceMappingURL=blog-page-tag-api.d.ts.map