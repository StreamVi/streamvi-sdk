/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { PaginatedResponseOfProjectHistoryResponse } from '../models';
/**
 * ProjectHistoryApi - axios parameter creator
 * @export
 */
export declare const axiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get project history of actions
     * @param {list1VEnum} v Version
     * @param {list1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {string} [dateFrom] Date from
     * @param {string} [dateTo] Date to
     * @param {list1ActionEnum} [action] Action
     * @param {number} [groupId] Group id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list1: (v: list1VEnum, language: list1LanguageEnum, projectId: number, limit?: number, offset?: number, dateFrom?: string, dateTo?: string, action?: list1ActionEnum, groupId?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ProjectHistoryApi - functional programming interface
 * @export
 */
export declare const fp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get project history of actions
     * @param {list1VEnum} v Version
     * @param {list1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {string} [dateFrom] Date from
     * @param {string} [dateTo] Date to
     * @param {list1ActionEnum} [action] Action
     * @param {number} [groupId] Group id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list1(v: list1VEnum, language: list1LanguageEnum, projectId: number, limit?: number, offset?: number, dateFrom?: string, dateTo?: string, action?: list1ActionEnum, groupId?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResponseOfProjectHistoryResponse>>;
};
/**
 * ProjectHistoryApi - factory interface
 * @export
 */
export declare const factory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get project history of actions
     * @param {list1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list1(requestParameters: list1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfProjectHistoryResponse>;
};
/**
 * Request parameters for list1 operation in ProjectHistoryApi.
 * @export
 * @interface list1Request
 */
export interface list1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof list1
     */
    readonly v?: list1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof list1
     */
    readonly language: list1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof list1
     */
    readonly projectId: number;
    /**
     * Number of results
     * @type {number}
     * @memberof list1
     */
    readonly limit?: number;
    /**
     * Page offset number
     * @type {number}
     * @memberof list1
     */
    readonly offset?: number;
    /**
     * Date from
     * @type {string}
     * @memberof list1
     */
    readonly dateFrom?: string;
    /**
     * Date to
     * @type {string}
     * @memberof list1
     */
    readonly dateTo?: string;
    /**
     * Action
     * @type {'project_channel_invite_add' | 'project_channel_invite_del' | 'project_channel_invite_accept' | 'project_channel_invite_decline' | 'user_project_invite_add' | 'user_project_invite_del' | 'user_project_invite_accept' | 'user_project_invite_decline' | 'user_project_add' | 'user_project_del' | 'user_project_change' | 'project_channel_add' | 'project_channel_del' | 'project_channel_change'}
     * @memberof list1
     */
    readonly action?: list1ActionEnum;
    /**
     * Group id
     * @type {number}
     * @memberof list1
     */
    readonly groupId?: number;
}
/**
 * ProjectHistoryApi - object-oriented interface
 * @export
 * @class ProjectHistoryApi
 * @extends {BaseAPI}
 */
export declare class ProjectHistoryApi extends BaseAPI {
    /**
     *
     * @summary Get project history of actions
     * @param {list1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectHistoryApi
     */
    list1(requestParameters: list1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").PaginatedResponse, any>>;
}
/**
  * @export
  * @enum {string}
  */
export declare enum list1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum list1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
/**
  * @export
  * @enum {string}
  */
export declare enum list1ActionEnum {
    project_channel_invite_add = "project_channel_invite_add",
    project_channel_invite_del = "project_channel_invite_del",
    project_channel_invite_accept = "project_channel_invite_accept",
    project_channel_invite_decline = "project_channel_invite_decline",
    user_project_invite_add = "user_project_invite_add",
    user_project_invite_del = "user_project_invite_del",
    user_project_invite_accept = "user_project_invite_accept",
    user_project_invite_decline = "user_project_invite_decline",
    user_project_add = "user_project_add",
    user_project_del = "user_project_del",
    user_project_change = "user_project_change",
    project_channel_add = "project_channel_add",
    project_channel_del = "project_channel_del",
    project_channel_change = "project_channel_change"
}
//# sourceMappingURL=project-history-api.d.ts.map