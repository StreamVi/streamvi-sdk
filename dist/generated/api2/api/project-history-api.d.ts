/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { PaginatedResponseOfProjectHistoryResponse } from '../models';
/**
 * ProjectHistoryApi - axios parameter creator
 * @export
 */
export declare const ProjectHistoryApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get project history of actions
     * @param {ProjectHistoryListV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {ProjectHistoryListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {string} [dateFrom] Date from
     * @param {string} [dateTo] Date to
     * @param {ProjectHistoryListV1ActionEnum} [action] Action
     * @param {number} [groupId] Group id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectHistoryListV1: (language: ProjectHistoryListV1LanguageEnum, projectId: number, v?: ProjectHistoryListV1VEnum, limit?: number, offset?: number, dateFrom?: string, dateTo?: string, action?: ProjectHistoryListV1ActionEnum, groupId?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ProjectHistoryApi - functional programming interface
 * @export
 */
export declare const ProjectHistoryApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get project history of actions
     * @param {ProjectHistoryListV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {ProjectHistoryListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {string} [dateFrom] Date from
     * @param {string} [dateTo] Date to
     * @param {ProjectHistoryListV1ActionEnum} [action] Action
     * @param {number} [groupId] Group id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectHistoryListV1(language: ProjectHistoryListV1LanguageEnum, projectId: number, v?: ProjectHistoryListV1VEnum, limit?: number, offset?: number, dateFrom?: string, dateTo?: string, action?: ProjectHistoryListV1ActionEnum, groupId?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResponseOfProjectHistoryResponse>>;
};
/**
 * ProjectHistoryApi - factory interface
 * @export
 */
export declare const ProjectHistoryApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get project history of actions
     * @param {ProjectHistoryApiProjectHistoryListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectHistoryListV1(requestParameters: ProjectHistoryApiProjectHistoryListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfProjectHistoryResponse>;
};
/**
 * ProjectHistoryApi - interface
 * @export
 * @interface ProjectHistoryApi
 */
export interface ProjectHistoryApiInterface {
    /**
     *
     * @summary Get project history of actions
     * @param {ProjectHistoryApiProjectHistoryListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectHistoryApiInterface
     */
    projectHistoryListV1(requestParameters: ProjectHistoryApiProjectHistoryListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfProjectHistoryResponse>;
}
/**
 * Request parameters for projectHistoryListV1 operation in ProjectHistoryApi.
 * @export
 * @interface ProjectHistoryApiProjectHistoryListV1Request
 */
export interface ProjectHistoryApiProjectHistoryListV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly language: ProjectHistoryListV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly projectId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly v?: ProjectHistoryListV1VEnum;
    /**
     * Number of results
     * @type {number}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly limit?: number;
    /**
     * Page offset number
     * @type {number}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly offset?: number;
    /**
     * Date from
     * @type {string}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly dateFrom?: string;
    /**
     * Date to
     * @type {string}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly dateTo?: string;
    /**
     * Action
     * @type {'project_channel_invite_add' | 'project_channel_invite_del' | 'project_channel_invite_accept' | 'project_channel_invite_decline' | 'user_project_invite_add' | 'user_project_invite_del' | 'user_project_invite_accept' | 'user_project_invite_decline' | 'user_project_add' | 'user_project_del' | 'user_project_change' | 'project_channel_add' | 'project_channel_del' | 'project_channel_change'}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly action?: ProjectHistoryListV1ActionEnum;
    /**
     * Group id
     * @type {number}
     * @memberof ProjectHistoryApiProjectHistoryListV1
     */
    readonly groupId?: number;
}
/**
 * ProjectHistoryApi - object-oriented interface
 * @export
 * @class ProjectHistoryApi
 * @extends {BaseAPI}
 */
export declare class ProjectHistoryApi extends BaseAPI implements ProjectHistoryApiInterface {
    /**
     *
     * @summary Get project history of actions
     * @param {ProjectHistoryApiProjectHistoryListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectHistoryApi
     */
    projectHistoryListV1(requestParameters: ProjectHistoryApiProjectHistoryListV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").PaginatedResponse, any>>;
}
/**
 * @export
 */
export declare const ProjectHistoryListV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type ProjectHistoryListV1LanguageEnum = typeof ProjectHistoryListV1LanguageEnum[keyof typeof ProjectHistoryListV1LanguageEnum];
/**
 * @export
 */
export declare const ProjectHistoryListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ProjectHistoryListV1VEnum = typeof ProjectHistoryListV1VEnum[keyof typeof ProjectHistoryListV1VEnum];
/**
 * @export
 */
export declare const ProjectHistoryListV1ActionEnum: {
    readonly ProjectChannelInviteAdd: "project_channel_invite_add";
    readonly ProjectChannelInviteDel: "project_channel_invite_del";
    readonly ProjectChannelInviteAccept: "project_channel_invite_accept";
    readonly ProjectChannelInviteDecline: "project_channel_invite_decline";
    readonly UserProjectInviteAdd: "user_project_invite_add";
    readonly UserProjectInviteDel: "user_project_invite_del";
    readonly UserProjectInviteAccept: "user_project_invite_accept";
    readonly UserProjectInviteDecline: "user_project_invite_decline";
    readonly UserProjectAdd: "user_project_add";
    readonly UserProjectDel: "user_project_del";
    readonly UserProjectChange: "user_project_change";
    readonly ProjectChannelAdd: "project_channel_add";
    readonly ProjectChannelDel: "project_channel_del";
    readonly ProjectChannelChange: "project_channel_change";
};
export type ProjectHistoryListV1ActionEnum = typeof ProjectHistoryListV1ActionEnum[keyof typeof ProjectHistoryListV1ActionEnum];
//# sourceMappingURL=project-history-api.d.ts.map