/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { GetHelpPageResponse } from '../models';
import type { PaginatedResponseOfHelpPageResponse } from '../models';
import type { StructureHelpPageResponse } from '../models';
/**
 * HelpPageApi - axios parameter creator
 * @export
 */
export declare const HelpPageApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get help page
     * @param {HelpPageGetV1LanguageEnum} language Current language
     * @param {string} url Url of page
     * @param {HelpPageGetV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageGetV1: (language: HelpPageGetV1LanguageEnum, url: string, v?: HelpPageGetV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get list of help pages
     * @param {HelpPageListV1LanguageEnum} language Current language
     * @param {HelpPageListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [s] String for search
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageListV1: (language: HelpPageListV1LanguageEnum, v?: HelpPageListV1VEnum, s?: string, limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get structure of help pages
     * @param {HelpPageStructureV1LanguageEnum} language Current language
     * @param {HelpPageStructureV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageStructureV1: (language: HelpPageStructureV1LanguageEnum, v?: HelpPageStructureV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * HelpPageApi - functional programming interface
 * @export
 */
export declare const HelpPageApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get help page
     * @param {HelpPageGetV1LanguageEnum} language Current language
     * @param {string} url Url of page
     * @param {HelpPageGetV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageGetV1(language: HelpPageGetV1LanguageEnum, url: string, v?: HelpPageGetV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetHelpPageResponse>>;
    /**
     *
     * @summary Get list of help pages
     * @param {HelpPageListV1LanguageEnum} language Current language
     * @param {HelpPageListV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {string} [s] String for search
     * @param {number} [limit] Number of results
     * @param {number} [offset] Page offset number
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageListV1(language: HelpPageListV1LanguageEnum, v?: HelpPageListV1VEnum, s?: string, limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResponseOfHelpPageResponse>>;
    /**
     *
     * @summary Get structure of help pages
     * @param {HelpPageStructureV1LanguageEnum} language Current language
     * @param {HelpPageStructureV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageStructureV1(language: HelpPageStructureV1LanguageEnum, v?: HelpPageStructureV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StructureHelpPageResponse>>;
};
/**
 * HelpPageApi - factory interface
 * @export
 */
export declare const HelpPageApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get help page
     * @param {HelpPageApiHelpPageGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageGetV1(requestParameters: HelpPageApiHelpPageGetV1Request, options?: RawAxiosRequestConfig): AxiosPromise<GetHelpPageResponse>;
    /**
     *
     * @summary Get list of help pages
     * @param {HelpPageApiHelpPageListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageListV1(requestParameters: HelpPageApiHelpPageListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfHelpPageResponse>;
    /**
     *
     * @summary Get structure of help pages
     * @param {HelpPageApiHelpPageStructureV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    helpPageStructureV1(requestParameters: HelpPageApiHelpPageStructureV1Request, options?: RawAxiosRequestConfig): AxiosPromise<StructureHelpPageResponse>;
};
/**
 * HelpPageApi - interface
 * @export
 * @interface HelpPageApi
 */
export interface HelpPageApiInterface {
    /**
     *
     * @summary Get help page
     * @param {HelpPageApiHelpPageGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HelpPageApiInterface
     */
    helpPageGetV1(requestParameters: HelpPageApiHelpPageGetV1Request, options?: RawAxiosRequestConfig): AxiosPromise<GetHelpPageResponse>;
    /**
     *
     * @summary Get list of help pages
     * @param {HelpPageApiHelpPageListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HelpPageApiInterface
     */
    helpPageListV1(requestParameters: HelpPageApiHelpPageListV1Request, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedResponseOfHelpPageResponse>;
    /**
     *
     * @summary Get structure of help pages
     * @param {HelpPageApiHelpPageStructureV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HelpPageApiInterface
     */
    helpPageStructureV1(requestParameters: HelpPageApiHelpPageStructureV1Request, options?: RawAxiosRequestConfig): AxiosPromise<StructureHelpPageResponse>;
}
/**
 * Request parameters for helpPageGetV1 operation in HelpPageApi.
 * @export
 * @interface HelpPageApiHelpPageGetV1Request
 */
export interface HelpPageApiHelpPageGetV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof HelpPageApiHelpPageGetV1
     */
    readonly language: HelpPageGetV1LanguageEnum;
    /**
     * Url of page
     * @type {string}
     * @memberof HelpPageApiHelpPageGetV1
     */
    readonly url: string;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof HelpPageApiHelpPageGetV1
     */
    readonly v?: HelpPageGetV1VEnum;
}
/**
 * Request parameters for helpPageListV1 operation in HelpPageApi.
 * @export
 * @interface HelpPageApiHelpPageListV1Request
 */
export interface HelpPageApiHelpPageListV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof HelpPageApiHelpPageListV1
     */
    readonly language: HelpPageListV1LanguageEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof HelpPageApiHelpPageListV1
     */
    readonly v?: HelpPageListV1VEnum;
    /**
     * String for search
     * @type {string}
     * @memberof HelpPageApiHelpPageListV1
     */
    readonly s?: string;
    /**
     * Number of results
     * @type {number}
     * @memberof HelpPageApiHelpPageListV1
     */
    readonly limit?: number;
    /**
     * Page offset number
     * @type {number}
     * @memberof HelpPageApiHelpPageListV1
     */
    readonly offset?: number;
}
/**
 * Request parameters for helpPageStructureV1 operation in HelpPageApi.
 * @export
 * @interface HelpPageApiHelpPageStructureV1Request
 */
export interface HelpPageApiHelpPageStructureV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof HelpPageApiHelpPageStructureV1
     */
    readonly language: HelpPageStructureV1LanguageEnum;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof HelpPageApiHelpPageStructureV1
     */
    readonly v?: HelpPageStructureV1VEnum;
}
/**
 * HelpPageApi - object-oriented interface
 * @export
 * @class HelpPageApi
 * @extends {BaseAPI}
 */
export declare class HelpPageApi extends BaseAPI implements HelpPageApiInterface {
    /**
     *
     * @summary Get help page
     * @param {HelpPageApiHelpPageGetV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HelpPageApi
     */
    helpPageGetV1(requestParameters: HelpPageApiHelpPageGetV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<GetHelpPageResponse, any>>;
    /**
     *
     * @summary Get list of help pages
     * @param {HelpPageApiHelpPageListV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HelpPageApi
     */
    helpPageListV1(requestParameters: HelpPageApiHelpPageListV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<import("../models").PaginatedResponse, any>>;
    /**
     *
     * @summary Get structure of help pages
     * @param {HelpPageApiHelpPageStructureV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HelpPageApi
     */
    helpPageStructureV1(requestParameters: HelpPageApiHelpPageStructureV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<StructureHelpPageResponse, any>>;
}
/**
 * @export
 */
export declare const HelpPageGetV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type HelpPageGetV1LanguageEnum = typeof HelpPageGetV1LanguageEnum[keyof typeof HelpPageGetV1LanguageEnum];
/**
 * @export
 */
export declare const HelpPageGetV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type HelpPageGetV1VEnum = typeof HelpPageGetV1VEnum[keyof typeof HelpPageGetV1VEnum];
/**
 * @export
 */
export declare const HelpPageListV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type HelpPageListV1LanguageEnum = typeof HelpPageListV1LanguageEnum[keyof typeof HelpPageListV1LanguageEnum];
/**
 * @export
 */
export declare const HelpPageListV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type HelpPageListV1VEnum = typeof HelpPageListV1VEnum[keyof typeof HelpPageListV1VEnum];
/**
 * @export
 */
export declare const HelpPageStructureV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type HelpPageStructureV1LanguageEnum = typeof HelpPageStructureV1LanguageEnum[keyof typeof HelpPageStructureV1LanguageEnum];
/**
 * @export
 */
export declare const HelpPageStructureV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type HelpPageStructureV1VEnum = typeof HelpPageStructureV1VEnum[keyof typeof HelpPageStructureV1VEnum];
//# sourceMappingURL=help-page-api.d.ts.map