/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SiteLiveRestreamsInfoResponse } from '../models';
/**
 * LiveApi - axios parameter creator
 * @export
 */
export declare const axiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary View live info
     * @param {restreams1VEnum} v Version
     * @param {restreams1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} broadcastId Broadcast id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    restreams1: (v: restreams1VEnum, language: restreams1LanguageEnum, projectId: number, broadcastId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LiveApi - functional programming interface
 * @export
 */
export declare const fp: (configuration?: Configuration) => {
    /**
     *
     * @summary View live info
     * @param {restreams1VEnum} v Version
     * @param {restreams1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} broadcastId Broadcast id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    restreams1(v: restreams1VEnum, language: restreams1LanguageEnum, projectId: number, broadcastId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SiteLiveRestreamsInfoResponse>>;
};
/**
 * LiveApi - factory interface
 * @export
 */
export declare const factory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary View live info
     * @param {restreams1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    restreams1(requestParameters: restreams1Request, options?: RawAxiosRequestConfig): AxiosPromise<SiteLiveRestreamsInfoResponse>;
};
/**
 * Request parameters for restreams1 operation in LiveApi.
 * @export
 * @interface restreams1Request
 */
export interface restreams1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof restreams1
     */
    readonly v?: restreams1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof restreams1
     */
    readonly language: restreams1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof restreams1
     */
    readonly projectId: number;
    /**
     * Broadcast id
     * @type {number}
     * @memberof restreams1
     */
    readonly broadcastId: number;
}
/**
 * LiveApi - object-oriented interface
 * @export
 * @class LiveApi
 * @extends {BaseAPI}
 */
export declare class LiveApi extends BaseAPI {
    /**
     *
     * @summary View live info
     * @param {restreams1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiveApi
     */
    restreams1(requestParameters: restreams1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SiteLiveRestreamsInfoResponse, any>>;
}
/**
  * @export
  * @enum {string}
  */
export declare enum restreams1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum restreams1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
//# sourceMappingURL=live-api.d.ts.map