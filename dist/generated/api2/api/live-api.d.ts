/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SiteLiveRestreamsInfoResponse } from '../models';
/**
 * LiveApi - axios parameter creator
 * @export
 */
export declare const LiveApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary View live info
     * @param {ControllersRestreamsV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} broadcastId Broadcast id
     * @param {ControllersRestreamsV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    controllersRestreamsV1: (language: ControllersRestreamsV1LanguageEnum, projectId: number, broadcastId: number, v?: ControllersRestreamsV1VEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LiveApi - functional programming interface
 * @export
 */
export declare const LiveApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary View live info
     * @param {ControllersRestreamsV1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} broadcastId Broadcast id
     * @param {ControllersRestreamsV1VEnum} [v] Version (automatically defaults to 1 based on method version, can be overridden)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    controllersRestreamsV1(language: ControllersRestreamsV1LanguageEnum, projectId: number, broadcastId: number, v?: ControllersRestreamsV1VEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SiteLiveRestreamsInfoResponse>>;
};
/**
 * LiveApi - factory interface
 * @export
 */
export declare const LiveApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary View live info
     * @param {LiveApiControllersRestreamsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    controllersRestreamsV1(requestParameters: LiveApiControllersRestreamsV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SiteLiveRestreamsInfoResponse>;
};
/**
 * LiveApi - interface
 * @export
 * @interface LiveApi
 */
export interface LiveApiInterface {
    /**
     *
     * @summary View live info
     * @param {LiveApiControllersRestreamsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiveApiInterface
     */
    controllersRestreamsV1(requestParameters: LiveApiControllersRestreamsV1Request, options?: RawAxiosRequestConfig): AxiosPromise<SiteLiveRestreamsInfoResponse>;
}
/**
 * Request parameters for controllersRestreamsV1 operation in LiveApi.
 * @export
 * @interface LiveApiControllersRestreamsV1Request
 */
export interface LiveApiControllersRestreamsV1Request {
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof LiveApiControllersRestreamsV1
     */
    readonly language: ControllersRestreamsV1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof LiveApiControllersRestreamsV1
     */
    readonly projectId: number;
    /**
     * Broadcast id
     * @type {number}
     * @memberof LiveApiControllersRestreamsV1
     */
    readonly broadcastId: number;
    /**
     * Version (automatically defaults to 1 based on method version, can be overridden)
     * @type {'1' | '2' | '3'}
     * @memberof LiveApiControllersRestreamsV1
     */
    readonly v?: ControllersRestreamsV1VEnum;
}
/**
 * LiveApi - object-oriented interface
 * @export
 * @class LiveApi
 * @extends {BaseAPI}
 */
export declare class LiveApi extends BaseAPI implements LiveApiInterface {
    /**
     *
     * @summary View live info
     * @param {LiveApiControllersRestreamsV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LiveApi
     */
    controllersRestreamsV1(requestParameters: LiveApiControllersRestreamsV1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SiteLiveRestreamsInfoResponse, any>>;
}
/**
 * @export
 */
export declare const ControllersRestreamsV1LanguageEnum: {
    readonly Ru: "ru";
    readonly En: "en";
    readonly Cn: "cn";
};
export type ControllersRestreamsV1LanguageEnum = typeof ControllersRestreamsV1LanguageEnum[keyof typeof ControllersRestreamsV1LanguageEnum];
/**
 * @export
 */
export declare const ControllersRestreamsV1VEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
};
export type ControllersRestreamsV1VEnum = typeof ControllersRestreamsV1VEnum[keyof typeof ControllersRestreamsV1VEnum];
//# sourceMappingURL=live-api.d.ts.map