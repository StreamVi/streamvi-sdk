/**
 * StreamVi Backend
 * API
 *
 * The version of the OpenAPI document: 3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SitePromoApplyResponse } from '../models';
import type { SitePromoCheckResponse } from '../models';
/**
 * PromoApi - axios parameter creator
 * @export
 */
export declare const axiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Apply code
     * @param {apply1VEnum} v Version
     * @param {apply1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} code Code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apply1: (v: apply1VEnum, language: apply1LanguageEnum, projectId: number, code: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Check code
     * @param {check1VEnum} v Version
     * @param {check1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} code Code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    check1: (v: check1VEnum, language: check1LanguageEnum, projectId: number, code: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PromoApi - functional programming interface
 * @export
 */
export declare const fp: (configuration?: Configuration) => {
    /**
     *
     * @summary Apply code
     * @param {apply1VEnum} v Version
     * @param {apply1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} code Code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apply1(v: apply1VEnum, language: apply1LanguageEnum, projectId: number, code: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SitePromoApplyResponse>>;
    /**
     *
     * @summary Check code
     * @param {check1VEnum} v Version
     * @param {check1LanguageEnum} language Current language
     * @param {number} projectId Project id
     * @param {number} code Code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    check1(v: check1VEnum, language: check1LanguageEnum, projectId: number, code: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SitePromoCheckResponse>>;
};
/**
 * PromoApi - factory interface
 * @export
 */
export declare const factory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Apply code
     * @param {apply1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apply1(requestParameters: apply1Request, options?: RawAxiosRequestConfig): AxiosPromise<SitePromoApplyResponse>;
    /**
     *
     * @summary Check code
     * @param {check1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    check1(requestParameters: check1Request, options?: RawAxiosRequestConfig): AxiosPromise<SitePromoCheckResponse>;
};
/**
 * Request parameters for apply1 operation in PromoApi.
 * @export
 * @interface apply1Request
 */
export interface apply1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof apply1
     */
    readonly v?: apply1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof apply1
     */
    readonly language: apply1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof apply1
     */
    readonly projectId: number;
    /**
     * Code
     * @type {number}
     * @memberof apply1
     */
    readonly code: number;
}
/**
 * Request parameters for check1 operation in PromoApi.
 * @export
 * @interface check1Request
 */
export interface check1Request {
    /**
     * Version
     * @type {'1' | '2' | '3'}
     * @memberof check1
     */
    readonly v?: check1VEnum;
    /**
     * Current language
     * @type {'ru' | 'en' | 'cn'}
     * @memberof check1
     */
    readonly language: check1LanguageEnum;
    /**
     * Project id
     * @type {number}
     * @memberof check1
     */
    readonly projectId: number;
    /**
     * Code
     * @type {number}
     * @memberof check1
     */
    readonly code: number;
}
/**
 * PromoApi - object-oriented interface
 * @export
 * @class PromoApi
 * @extends {BaseAPI}
 */
export declare class PromoApi extends BaseAPI {
    /**
     *
     * @summary Apply code
     * @param {apply1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromoApi
     */
    apply1(requestParameters: apply1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SitePromoApplyResponse, any>>;
    /**
     *
     * @summary Check code
     * @param {check1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromoApi
     */
    check1(requestParameters: check1Request, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SitePromoCheckResponse, any>>;
}
/**
  * @export
  * @enum {string}
  */
export declare enum apply1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum apply1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
/**
  * @export
  * @enum {string}
  */
export declare enum check1VEnum {
    _1 = "1",
    _2 = "2",
    _3 = "3"
}
/**
  * @export
  * @enum {string}
  */
export declare enum check1LanguageEnum {
    ru = "ru",
    en = "en",
    cn = "cn"
}
//# sourceMappingURL=promo-api.d.ts.map